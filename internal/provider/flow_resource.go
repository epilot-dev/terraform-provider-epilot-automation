// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"context"
	"epilot-automation/internal/sdk"
	"fmt"

	"epilot-automation/internal/sdk/pkg/models/operations"
	"epilot-automation/internal/validators"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/mapvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// Ensure provider defined types fully satisfy framework interfaces.
var _ resource.Resource = &FlowResource{}
var _ resource.ResourceWithImportState = &FlowResource{}

func NewFlowResource() resource.Resource {
	return &FlowResource{}
}

// FlowResource defines the resource implementation.
type FlowResource struct {
	client *sdk.SDK
}

// FlowResourceModel describes the resource data model.
type FlowResourceModel struct {
	Actions           []AnyActionConfig  `tfsdk:"actions"`
	CreatedAt         types.String       `tfsdk:"created_at"`
	CreatedBy         types.String       `tfsdk:"created_by"`
	Enabled           types.Bool         `tfsdk:"enabled"`
	EntitySchema      types.String       `tfsdk:"entity_schema"`
	FlowName          types.String       `tfsdk:"flow_name"`
	ID                types.String       `tfsdk:"id"`
	LastUpdatedBy     types.String       `tfsdk:"last_updated_by"`
	OrgID             types.String       `tfsdk:"org_id"`
	Runs              types.Number       `tfsdk:"runs"`
	TriggerConditions []TriggerCondition `tfsdk:"trigger_conditions"`
	Triggers          []AnyTrigger       `tfsdk:"triggers"`
	UpdatedAt         types.String       `tfsdk:"updated_at"`
}

func (r *FlowResource) Metadata(ctx context.Context, req resource.MetadataRequest, resp *resource.MetadataResponse) {
	resp.TypeName = req.ProviderTypeName + "_flow"
}

func (r *FlowResource) Schema(ctx context.Context, req resource.SchemaRequest, resp *resource.SchemaResponse) {
	resp.Schema = schema.Schema{
		MarkdownDescription: "Flow Resource",

		Attributes: map[string]schema.Attribute{
			// {"RefType":"Schemas","Examples":[],"Extensions":{"x-speakeasy-param-computed":true,"x-speakeasy-root":true,"x-speakeasy-entity":"Flow","x-untouched":true},"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"BaseName":"","Scope":"shared","Truncated":false,"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The created automation flow"},"Input":false,"Format":"","Name":"AutomationFlow","ItemType":null,"Enum":null,"Output":false,"Type":"class","Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"actions","Type":{"ItemType":{"Fields":[],"BaseName":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"AnyActionConfig"},"Examples":[],"Input":false,"Output":false,"Format":"","AdditionalProperties":null,"Name":"AnyActionConfig","Enum":null,"RefType":"Schemas","Truncated":false,"Discriminator":null,"Type":"union","ItemType":null,"AssociatedTypes":[{"AdditionalProperties":null,"Name":"AutomationActionConfig","Enum":null,"Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"AutomationActionConfig"},"Fields":[{"Type":{"Name":"","Type":"boolean","ItemType":null,"Output":false,"Examples":[],"Format":"","Discriminator":null,"Enum":null,"Scope":"","BaseName":"","Comments":null,"Input":false,"AssociatedTypes":[],"RefType":"","Truncated":false,"AdditionalProperties":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":{"Summary":"","Description":"Whether to stop execution in a failed state if this action fails","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"allow_failure"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"allow_failure"},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"config"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"config","Type":{"Fields":[],"Output":false,"Discriminator":null,"Name":"","Type":"map","ItemType":{"RefType":"","Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Input":false,"Discriminator":null,"Name":"","BaseName":"","Examples":[],"AdditionalProperties":null,"Type":"any","ItemType":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","Comments":null},"RefType":"","Format":"","Scope":"","BaseName":"","Comments":null,"Examples":[],"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"created_automatically","Type":{"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","Enum":null,"BaseName":"","Output":false,"Format":"","Type":"boolean","Fields":[],"Scope":"","Input":false,"Examples":[],"ItemType":null,"AssociatedTypes":[],"RefType":"","Comments":null,"AdditionalProperties":null,"Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Flag indicating whether the action was created automatically or manually","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"created_automatically"}],"Optional":true},{"ErrorMessage":false,"Name":"flow_action_id","Type":{"RefType":"","Type":"string","ItemType":null,"Output":false,"Format":"","AdditionalProperties":null,"Name":"","Fields":[],"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false,"Comments":null,"Input":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"flow_action_id"}],"Optional":true,"SerializationMethod":null},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Discriminator":null,"AssociatedTypes":[],"Output":false,"Fields":[],"Input":false,"Name":"","Type":"string","Comments":null,"Scope":"","BaseName":"","RefType":"","Truncated":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"AdditionalProperties":null,"ItemType":null,"Enum":null}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Name":"","Fields":[],"BaseName":"","Input":false,"Format":"","Truncated":false,"Output":false,"Examples":[],"Type":"string","Enum":null,"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Scope":"","Comments":null,"Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":true},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Fields":[],"Output":false,"Format":"","Truncated":false,"Input":false,"Examples":[],"Discriminator":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Comments":null,"AdditionalProperties":null,"Type":"string","Enum":null,"Scope":"","Name":"","ItemType":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}}}],"Scope":"shared","BaseName":"","RefType":"Schemas","Output":false,"AssociatedTypes":[],"Comments":null,"Type":"class","ItemType":null,"Examples":[],"Format":"","Discriminator":null},{"Name":"CartCheckoutActionConfig","RefType":"Schemas","Comments":{"Summary":"","Description":"Creates an order entity with prices from journey","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Format":"","AdditionalProperties":null,"ItemType":null,"Fields":[{"ErrorMessage":false,"Name":"allow_failure","Type":{"Scope":"","Truncated":false,"Discriminator":null,"BaseName":"","Name":"","ItemType":null,"Fields":[],"Enum":null,"AssociatedTypes":[],"RefType":"","Input":false,"Format":"","Examples":[],"AdditionalProperties":null,"Type":"boolean","Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":{"Summary":"","Description":"Whether to stop execution in a failed state if this action fails","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"allow_failure"}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"config"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"config","Type":{"Name":"CartCheckoutConfig","Fields":[{"Name":"linkback_relation_attribute","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Enum":null,"Comments":null,"Examples":[],"Name":"","Fields":[],"AssociatedTypes":[],"BaseName":"","Truncated":false,"Output":false,"Type":"string","Scope":"","RefType":"","Input":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Relation attribute on the main entity where the target entity will be linked. Set to false to disable linkback\n","ExternalDocs":null,"Deprecated":false},"Annotations":[{"FieldName":"linkback_relation_attribute","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"linkback_relation_tags","Type":{"RefType":"","Truncated":false,"Comments":null,"AdditionalProperties":null,"Examples":[],"Format":"","Name":"","Enum":null,"Scope":"","BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"ItemType":{"Type":"string","RefType":"","Truncated":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null,"Scope":"","Input":false,"Examples":[],"Fields":[],"AdditionalProperties":null,"BaseName":"","Output":false,"Format":"","Discriminator":null},"AssociatedTypes":[],"Input":false,"Type":"array","Fields":[],"Discriminator":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Relation tags (labels) to include in main entity linkback relation attribute","ExternalDocs":null,"Deprecated":false},"Annotations":[{"FieldName":"linkback_relation_tags","Ignore":false}],"Optional":true},{"Type":{"Examples":[],"Discriminator":null,"ItemType":{"Extensions":{"x-speakeasy-param-computed":true,"Symbol":"CartCheckoutConfigMappingAttributes","x-untouched":true},"Examples":[],"Input":false,"Output":false,"AdditionalProperties":null,"Fields":[],"Scope":"shared","AssociatedTypes":[{"Examples":[],"Type":"union","ItemType":null,"AssociatedTypes":[{"AssociatedTypes":[],"BaseName":"","RefType":"Schemas","Name":"AppendValueMapper","Type":"class","Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"AppendValueMapper"},"Scope":"shared","Truncated":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Fields":[{"Annotations":[{"FieldName":"mode","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"mode","Type":{"ItemType":null,"Truncated":false,"Comments":{"Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Format":"","AdditionalProperties":null,"Type":"enum","Enum":{"Names":[],"Type":{"Type":"string","Truncated":false,"Examples":[],"Name":"","Scope":"","RefType":"","Comments":null,"Fields":[],"Input":false,"Format":"","ItemType":null,"Enum":null,"BaseName":"","Output":false,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[]},"Values":["copy_if_exists","append_if_exists","set_value"]},"Input":false,"Scope":"shared","BaseName":"","RefType":"Schemas","Output":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Name":"MappingAttributeMode","Fields":[],"AssociatedTypes":[],"Examples":[],"Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""}},{"Annotations":[{"Ignore":false,"FieldName":"source"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"source","Type":{"Comments":null,"Examples":[],"Discriminator":null,"ItemType":null,"Truncated":false,"Enum":null,"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"AssociatedTypes":[],"Input":false,"Output":false,"AdditionalProperties":null,"Name":"","RefType":"","Type":"string","Format":""},"Comments":{"Summary":"","Description":"JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Type":{"AssociatedTypes":[],"AdditionalProperties":null,"Discriminator":null,"Fields":[],"BaseName":"","RefType":"","Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Name":"","Type":"string","Enum":null,"Scope":"","Truncated":false,"Comments":null,"ItemType":null,"Format":""},"Comments":{"Summary":"","Description":"JSON like target path for the attribute. Eg. last_name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"target"},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_unique","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Discriminator":null,"Scope":"","Comments":null,"RefType":"","Truncated":false,"Format":"","ItemType":{"ItemType":null,"Output":false,"Format":"","Discriminator":null,"Type":"string","AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Truncated":false,"Examples":[],"AdditionalProperties":null,"Name":"","Fields":[],"Scope":"","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"}},"AssociatedTypes":[],"Fields":[],"Enum":null,"BaseName":"","Input":false,"Output":false,"Name":"","Type":"array","Examples":[]},"Comments":{"Summary":"","Description":"Array of keys which should be used when checking for uniqueness. Eg: [country, city, postal_code]\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"target_unique"}]},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value_json","Type":{"Scope":"","Format":"","AdditionalProperties":null,"ItemType":null,"Fields":[],"AssociatedTypes":[],"BaseName":"","RefType":"","Output":false,"Name":"","Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Type":"string","Truncated":false,"Comments":null,"Input":false,"Discriminator":null},"Comments":{"Description":"To be provided only when mapping json objects into a target attribute. Eg array of addresses.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"value_json"}]}],"Enum":null,"Comments":{"Summary":"","Description":"","ExternalDocs":null,"Deprecated":true,"DeprecationReplacement":"","DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible"},"Examples":[]},{"Truncated":false,"Comments":{"Summary":"","Description":"","ExternalDocs":null,"Deprecated":true,"DeprecationReplacement":"","DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible"},"Input":false,"Examples":[],"Format":"","Type":"class","ItemType":null,"BaseName":"","Output":false,"Fields":[{"Name":"mode","Type":{"Fields":[],"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Output":false,"Discriminator":null,"Name":"MappingAttributeMode","Type":"enum","BaseName":"","RefType":"Schemas","Truncated":false,"Input":false,"ItemType":null,"AssociatedTypes":[],"Enum":{"Type":{"Examples":[],"Format":"","Fields":[],"AssociatedTypes":[],"Name":"","Comments":null,"Input":false,"Output":false,"Truncated":false,"ItemType":null,"Enum":null,"Scope":"","BaseName":"","RefType":"","Extensions":{},"AdditionalProperties":null,"Type":"string","Discriminator":null},"Values":["copy_if_exists","append_if_exists","set_value"],"Names":[]},"Scope":"shared","Comments":{"DeprecationMessage":"","Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Examples":[],"Format":"","AdditionalProperties":null},"Comments":{"Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"mode"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"source","Type":{"Name":"","Enum":null,"Scope":"","RefType":"","AdditionalProperties":null,"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Discriminator":null,"BaseName":"","Truncated":false,"Output":false,"Type":"string","ItemType":null,"Fields":[],"Comments":null,"Input":false,"Examples":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price\n","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"source"}],"Optional":false},{"Type":{"Type":"string","BaseName":"","Enum":null,"Scope":"","Comments":null,"Input":false,"Examples":[],"Format":"","AdditionalProperties":null,"Name":"","ItemType":null,"Fields":[],"AssociatedTypes":[],"RefType":"","Output":false,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"JSON like target path for the attribute. Eg. last_name"},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"target"}],"Enum":null,"Scope":"shared","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"CopyValueMapper"},"AdditionalProperties":null,"Discriminator":null,"Name":"CopyValueMapper","AssociatedTypes":[],"RefType":"Schemas"},{"RefType":"Schemas","Output":false,"AdditionalProperties":null,"AssociatedTypes":[],"Scope":"shared","Comments":{"DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible","Summary":"","Description":"","ExternalDocs":null,"Deprecated":true,"DeprecationReplacement":""},"Extensions":{"Symbol":"SetValueMapper","x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","Name":"SetValueMapper","Fields":[{"Name":"mode","Type":{"Input":false,"AdditionalProperties":null,"Discriminator":null,"Type":"enum","ItemType":null,"AssociatedTypes":[],"Enum":{"Type":{"RefType":"","Comments":null,"Output":false,"Extensions":{},"Name":"","ItemType":null,"Scope":"","BaseName":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","Enum":null,"Truncated":false,"Examples":[],"Fields":[],"AssociatedTypes":[],"Input":false,"Format":""},"Values":["copy_if_exists","append_if_exists","set_value"],"Names":[]},"RefType":"Schemas","Truncated":false,"Fields":[],"BaseName":"","Comments":{"Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Output":false,"Name":"MappingAttributeMode","Scope":"shared","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":""},"Comments":{"Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"mode"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"target","Type":{"Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AssociatedTypes":[],"Scope":"","BaseName":"","Examples":[],"Discriminator":null,"Type":"string","Enum":null,"Comments":null,"RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Name":"","ItemType":null,"Fields":[]},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"JSON like target path for the attribute. Eg. last_name"},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"value","Type":{"Type":"any","ItemType":null,"Enum":null,"Scope":"","Input":false,"Truncated":false,"Output":false,"Examples":[],"Fields":[],"AssociatedTypes":[],"RefType":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","AdditionalProperties":null,"Name":"","BaseName":"","Discriminator":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Any value to be set: string, number, string[], number[], JSON object, etc. It will override existing values, if any.\n","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null}],"BaseName":"","Input":false,"Type":"class","ItemType":null,"Enum":null,"Truncated":false,"Discriminator":null}],"BaseName":"","Truncated":false,"Discriminator":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"MappingAttribute"},"AdditionalProperties":null,"Enum":null,"Scope":"shared","Input":false,"Output":false,"Format":"","Name":"MappingAttribute","Fields":[],"RefType":"Schemas","Comments":null},{"AssociatedTypes":[],"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"MappingAttributeV2"},"Examples":[],"Type":"class","Enum":null,"Comments":null,"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"operation"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operation","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"OperationNode"},"Examples":[],"Fields":[],"Truncated":false,"Scope":"shared","RefType":"Schemas","Discriminator":null,"Name":"OperationNode","AssociatedTypes":[{"Fields":[],"Input":false,"Discriminator":null,"ItemType":null,"Enum":null,"BaseName":"","Output":false,"Format":"","AdditionalProperties":null,"Type":"any","RefType":"","Truncated":false,"Name":"","AssociatedTypes":[],"Scope":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[]},{"Fields":[{"Name":"_append","Type":{"Enum":null,"BaseName":"","Type":"array","RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"AdditionalProperties":null,"Truncated":false,"ItemType":{"Scope":"","BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"Append"},"Format":"","Type":"any","AssociatedTypes":[],"RefType":"","Examples":[],"Truncated":false,"Comments":null,"Input":false,"AdditionalProperties":null,"Fields":[],"Enum":null,"Discriminator":null,"Name":"","ItemType":null},"AssociatedTypes":[],"Scope":"","Comments":null,"Input":false,"Output":false,"Examples":[],"Name":"","Discriminator":null,"Format":""},"Comments":{"Summary":"","Description":"Append to array","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"_append"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"_copy","Type":{"Type":"string","AssociatedTypes":[],"BaseName":"","Truncated":false,"Examples":["contact.first_name"],"Scope":"","RefType":"","Comments":null,"Output":false,"Fields":[],"Input":false,"Format":"","Discriminator":null,"Name":"","ItemType":null,"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null},"Comments":{"Description":"Copy JSONPath value from source entity context","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"_copy"}]},{"ErrorMessage":false,"Name":"_set","Type":{"AssociatedTypes":[],"BaseName":"","RefType":"","Truncated":false,"Output":false,"Format":"","AdditionalProperties":null,"Type":"any","ItemType":null,"Enum":null,"Discriminator":null,"Fields":[],"Scope":"","Comments":null,"Name":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"_set"}],"Optional":true,"SerializationMethod":null},{"SerializationMethod":null,"ErrorMessage":false,"Name":"_uniq","Type":{"Type":"union","ItemType":null,"Enum":null,"RefType":"","Truncated":false,"Output":false,"Examples":[],"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[{"Truncated":false,"Examples":[true],"Format":"","Type":"boolean","AssociatedTypes":[],"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"ItemType":null,"RefType":"","Output":false,"Name":"","Fields":[],"Enum":null,"Scope":"","BaseName":"","Discriminator":null},{"Truncated":false,"Input":false,"AdditionalProperties":null,"Name":"","BaseName":"","Extensions":{"x-untouched":true},"Fields":[],"Scope":"","RefType":"","Examples":[],"Format":"","Type":"array","Enum":null,"Comments":null,"Output":false,"Discriminator":null,"ItemType":{"Fields":[],"Input":false,"Extensions":{"x-untouched":true,"Symbol":"LinkbackRelationTags"},"Comments":null,"Output":false,"Examples":[],"Format":"","Type":"string","Scope":"","RefType":"","Truncated":false,"Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","AdditionalProperties":null,"Discriminator":null},"AssociatedTypes":[]}],"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"OperationObjectNodeUniq"},"Scope":"shared","Comments":null,"Input":false,"Name":"OperationObjectNode__uniq","Format":"","Discriminator":null},"Comments":{"Description":"Unique array","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"_uniq"}],"Optional":true}],"Enum":null,"Truncated":false,"Format":"","Examples":[],"Discriminator":null,"Name":"OperationObjectNode","Type":"class","BaseName":"","RefType":"Schemas","Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Mapping operation nodes are either primitive values or operation node objects","ExternalDocs":null,"Deprecated":false},"Input":false,"ItemType":null,"AssociatedTypes":[],"Scope":"shared","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"OperationObjectNode"},"AdditionalProperties":{"ErrorMessage":false,"Name":"AdditionalProperties","Type":{"Output":false,"Discriminator":null,"Type":"any","ItemType":null,"Fields":[],"RefType":"","Extensions":{},"Examples":[],"Format":"","AssociatedTypes":[],"Enum":null,"Scope":"","AdditionalProperties":null,"Name":"","BaseName":"","Comments":null,"Truncated":false,"Input":false},"Comments":null,"Annotations":[{"Ignore":true,"FieldName":"-"}],"Optional":true,"SerializationMethod":null}}],"Comments":null,"Output":false,"AdditionalProperties":null,"ItemType":null,"Enum":null,"Input":false,"Format":"","Type":"union","BaseName":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Mapping operation nodes are either primitive values or operation node objects","ExternalDocs":null}},{"Comments":{"Summary":"","Description":"Target JSON path for the attribute to set","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target","Type":{"BaseName":"","Input":false,"Output":false,"Format":"","ItemType":null,"RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","Enum":null,"Comments":null,"Scope":"","Examples":[],"AdditionalProperties":null,"Discriminator":null,"Type":"string","Fields":[],"AssociatedTypes":[]}}],"RefType":"Schemas","Truncated":false,"Format":"","Discriminator":null,"ItemType":null,"Scope":"shared","Input":false,"Output":false,"AdditionalProperties":null,"Name":"MappingAttributeV2"}],"BaseName":"","Truncated":false,"Comments":null,"Discriminator":null,"Type":"union","ItemType":null,"RefType":"","Format":"","Name":"CartCheckoutConfig_mapping_attributes","Enum":null},"AssociatedTypes":[],"Scope":"","RefType":"","Input":false,"Type":"array","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Fields":[],"BaseName":"","Truncated":false,"Comments":null,"Name":"","Enum":null,"Output":false,"AdditionalProperties":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"mapping_attributes"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"mapping_attributes"},{"SerializationMethod":null,"ErrorMessage":false,"Name":"mapping_config","Type":{"Scope":"shared","BaseName":"","Comments":null,"Discriminator":null,"Fields":[{"Type":{"Comments":null,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"Scope":"","RefType":"","Truncated":false,"Examples":[],"Type":"string","ItemType":null,"AssociatedTypes":[],"Enum":null,"Discriminator":null,"Name":"","BaseName":"","Format":"","AdditionalProperties":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Id of Entity Mapping Configuration to run for mapping.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"config_id"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"config_id"},{"Name":"target_id","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","RefType":"","Type":"string","Fields":[],"Enum":null,"BaseName":"","Name":"","Scope":"","Truncated":false,"Comments":null,"Input":false,"ItemType":null,"Output":false,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[]},"Comments":{"Description":"Id of TargetConfig to run for mapping.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"target_id"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"version","Type":{"Format":"","Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Truncated":false,"Fields":[],"Comments":null,"Output":false,"AdditionalProperties":null,"Type":"number","ItemType":null,"Scope":"","Enum":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Discriminator":null},"Comments":{"Description":"Version of Entity Mapping Configuration to run for mapping.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"version"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Enum":null,"Output":false,"Name":"MappingConfigRef","AssociatedTypes":[],"Truncated":false,"Extensions":{"Symbol":"MappingConfigRef","x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"AdditionalProperties":null,"Type":"class","ItemType":null,"RefType":"Schemas","Input":false,"Format":""},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"mapping_config"}],"Optional":true},{"ErrorMessage":false,"Name":"relation_attributes","Type":{"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Type":"array","ItemType":{"Output":false,"Examples":[],"Discriminator":null,"Fields":[{"Name":"mode","Type":{"Name":"RelationAttribute_mode","Type":"enum","ItemType":null,"Enum":{"Values":["append","prepend","set"],"Names":[],"Type":{"Type":"string","Enum":null,"BaseName":"","Format":"","Scope":"","RefType":"","Truncated":false,"Output":false,"AdditionalProperties":null,"Name":"","ItemType":null,"Comments":null,"Extensions":{},"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Input":false,"Examples":[]}},"Comments":null,"Fields":[],"Scope":"shared","Truncated":false,"Discriminator":null,"RefType":"","Format":"","Examples":[],"AdditionalProperties":null,"AssociatedTypes":[],"BaseName":"","Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"mode"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"related_to","Type":{"ItemType":{"AdditionalProperties":null,"Discriminator":null,"Type":"any","Enum":null,"Scope":"","Input":false,"Examples":[],"Name":"","BaseName":"","Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"ItemType":null,"AssociatedTypes":[],"Comments":null,"Format":"","Fields":[],"RefType":""},"Truncated":false,"Input":false,"Discriminator":null,"AssociatedTypes":[],"Scope":"","BaseName":"","Format":"","Examples":[],"AdditionalProperties":null,"Type":"map","RefType":"","Comments":null,"Output":false,"Name":"","Fields":[],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":{"Deprecated":true,"DeprecationReplacement":"","DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible","Summary":"","Description":"","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"related_to"}],"Optional":true},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"source_filter","Type":{"Input":false,"Format":"","Discriminator":null,"Name":"RelationAttribute_source_filter","ItemType":null,"RefType":"","Scope":"shared","BaseName":"","Output":false,"Type":"class","Fields":[{"Name":"attribute","Type":{"Enum":null,"Truncated":false,"Input":false,"AdditionalProperties":null,"Name":"","Fields":[],"RefType":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"Scope":"","BaseName":"","Comments":null,"Examples":[],"Type":"string","ItemType":null,"AssociatedTypes":[],"Format":""},"Comments":{"Summary":"","Description":"Filter by a specific relation attribute on the main entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"attribute"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"limit","Type":{"Format":"","BaseName":"","Enum":null,"Scope":"","RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"AssociatedTypes":[],"Type":"integer","ItemType":null,"Truncated":false,"Comments":null,"AdditionalProperties":null,"Name":"","Input":false,"Output":false,"Discriminator":null,"Fields":[]},"Comments":{"Summary":"","Description":"Limit relations to maximum number (default, all matched relations)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"limit","Ignore":false}]},{"Name":"relation_tag","Type":{"Enum":null,"RefType":"","Input":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Type":"string","Fields":[],"Scope":"","BaseName":"","AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Truncated":false,"Comments":null,"Examples":[],"Format":"","Name":"","ItemType":null,"Output":false},"Comments":{"Summary":"","Description":"Filter by relation tag (label) on the main entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"relation_tag"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"schema","Type":{"BaseName":"","Input":false,"Examples":[],"ItemType":null,"AssociatedTypes":[],"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","Type":"string","Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Enum":null,"Truncated":false,"Comments":null,"Fields":[],"RefType":""},"Comments":{"Description":"Filter by specific schema","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"schema","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"self","Type":{"ItemType":null,"Enum":null,"Comments":null,"Examples":[],"Type":"boolean","Scope":"","BaseName":"","Truncated":false,"Input":false,"Output":false,"AdditionalProperties":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"RefType":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Picks main entity as relation (overrides other filters)"},"Annotations":[{"FieldName":"self","Ignore":false}],"Optional":true,"SerializationMethod":null},{"Type":{"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Type":"string","Enum":null,"Input":false,"Format":"","Discriminator":null,"ItemType":null,"Truncated":false,"RefType":"","AdditionalProperties":null,"Name":"","Fields":[],"BaseName":"","Output":false,"AssociatedTypes":[],"Scope":""},"Comments":{"Summary":"","Description":"Filter by a specific tag on the related entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"tag"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"tag"}],"AssociatedTypes":[],"Enum":null,"Examples":[],"AdditionalProperties":null,"Truncated":false,"Comments":{"Description":"A filter to identify which source entities to pick as relations from main entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"RelationAttributeSourceFilter"}},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A filter to identify which source entities to pick as relations from main entity","ExternalDocs":null,"Deprecated":false},"Annotations":[{"FieldName":"source_filter","Ignore":false}]},{"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"target","Type":{"Name":"","Type":"string","Fields":[],"RefType":"","Enum":null,"Truncated":false,"AdditionalProperties":null,"Format":"","Discriminator":null,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Comments":null,"ItemType":null,"AssociatedTypes":[],"Scope":"","BaseName":""},"Comments":{"Summary":"","Description":"Target attribute to store the relation in","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Annotations":[{"Ignore":false,"FieldName":"target_tags"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_tags","Type":{"ItemType":{"Fields":[],"Scope":"","BaseName":"","Examples":[],"AdditionalProperties":null,"Type":"string","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Discriminator":null,"Truncated":false,"Input":false,"Name":"","AssociatedTypes":[],"Enum":null,"RefType":"","Output":false,"Format":"","ItemType":null},"Scope":"","Comments":null,"Input":false,"Examples":[],"Name":"","Type":"array","Fields":[],"RefType":"","Discriminator":null,"AssociatedTypes":[],"BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Enum":null,"Output":false,"AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Relation tags (labels) to set for the stored relations","ExternalDocs":null,"Deprecated":false}},{"Name":"target_tags_include_source","Type":{"BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Enum":null,"AssociatedTypes":[],"AdditionalProperties":null,"Fields":[],"ItemType":null,"Scope":"","RefType":"","Format":"","Type":"boolean","Truncated":false,"Comments":null,"Input":false,"Examples":[],"Discriminator":null,"Name":""},"Comments":{"Summary":"","Description":"Include all relation tags (labels) present on the main entity relation","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"target_tags_include_source"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Input":false,"Enum":null,"BaseName":"","Comments":null,"ItemType":null,"AssociatedTypes":[],"AdditionalProperties":null,"Scope":"shared","RefType":"Schemas","Truncated":false,"Extensions":{"x-speakeasy-param-computed":true,"Symbol":"RelationAttribute","x-untouched":true},"Format":"","Name":"RelationAttribute","Type":"class"},"Enum":null,"BaseName":"","RefType":"","Output":false,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Scope":"","Comments":null,"Name":"","Truncated":false,"Input":false,"Examples":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"relation_attributes"}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"target_unique"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_unique","Type":{"Examples":[],"Name":"","Fields":[],"Scope":"","BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Enum":null,"Output":false,"Discriminator":null,"Type":"array","ItemType":{"Output":false,"Format":"","Name":"","ItemType":null,"Fields":[],"BaseName":"","Input":false,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Examples":[],"AdditionalProperties":null,"Type":"string","Scope":"","Comments":null},"Input":false,"AdditionalProperties":null,"AssociatedTypes":[],"RefType":"","Comments":null,"Format":""},"Comments":{"Description":"Unique key for target entity (see upsertEntity of Entity API)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}},{"Name":"version","Type":{"Examples":[],"ItemType":null,"Scope":"","BaseName":"","Truncated":false,"Comments":null,"Output":false,"Format":"","Discriminator":null,"Type":"string","AssociatedTypes":[],"Input":false,"Name":"","Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Enum":null,"RefType":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Version of the config","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"version"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"CartCheckoutConfig"},"Discriminator":null,"AssociatedTypes":[],"Enum":null,"Scope":"shared","Examples":[],"AdditionalProperties":null,"Truncated":false,"Output":false,"Type":"class","ItemType":null,"BaseName":"","RefType":"Schemas","Format":""},"Comments":null},{"Name":"created_automatically","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Discriminator":null,"Fields":[],"Enum":null,"BaseName":"","AdditionalProperties":null,"Name":"","AssociatedTypes":[],"Truncated":false,"Output":false,"Format":"","Type":"boolean","ItemType":null,"Scope":"","RefType":"","Comments":null,"Input":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Flag indicating whether the action was created automatically or manually","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"created_automatically"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"flow_action_id","Type":{"Name":"","ItemType":null,"Fields":[],"Truncated":false,"Output":false,"Format":"","AdditionalProperties":null,"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AssociatedTypes":[],"Enum":null,"Comments":null,"Input":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Discriminator":null,"Type":"string","RefType":""},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"flow_action_id"}],"Optional":true},{"Name":"id","Type":{"Name":"","Type":"string","Fields":[],"Scope":"","Truncated":false,"Output":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"AssociatedTypes":[],"RefType":"","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","ItemType":null,"Enum":null,"BaseName":"","AdditionalProperties":null,"Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Enum":null,"Truncated":false,"Format":"","AdditionalProperties":null,"Name":"","ItemType":null,"Scope":"","Examples":[],"Discriminator":null,"AssociatedTypes":[],"BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Type":"string","Fields":[],"RefType":"","Comments":null,"Output":false},"Comments":null,"Annotations":[{"FieldName":"name","Ignore":false}]},{"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Examples":[],"Format":"","BaseName":"","Fields":[],"Truncated":false,"Comments":null,"Output":false,"AdditionalProperties":null,"ItemType":null,"Scope":"shared","RefType":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"Name":"CartCheckoutActionConfig_type","AssociatedTypes":[],"Enum":{"Type":{"Name":"","Enum":null,"BaseName":"","AdditionalProperties":null,"Format":"","ItemType":null,"AssociatedTypes":[],"RefType":"","Input":false,"Extensions":{},"Truncated":false,"Examples":[],"Discriminator":null,"Type":"string","Fields":[],"Scope":"","Comments":null,"Output":false},"Values":["cart-checkout"],"Names":[]},"Type":"enum"},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true}],"BaseName":"","Output":false,"AssociatedTypes":[],"Discriminator":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"CartCheckoutActionConfig"},"Examples":[],"Type":"class","Enum":null,"Scope":"shared","Truncated":false,"Input":false},{"Name":"CreateDocumentActionConfig","BaseName":"","RefType":"Schemas","AdditionalProperties":null,"Discriminator":null,"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"allow_failure"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"allow_failure","Type":{"Output":false,"Type":"boolean","Enum":null,"Input":false,"Truncated":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","AdditionalProperties":null,"Fields":[],"BaseName":"","RefType":"","Scope":"","Examples":[],"Discriminator":null,"Name":"","ItemType":null,"AssociatedTypes":[]},"Comments":{"Summary":"","Description":"Whether to stop execution in a failed state if this action fails","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Name":"config","Type":{"ItemType":null,"Enum":null,"Scope":"shared","Discriminator":null,"Type":"class","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"CreateDocumentConfig"},"Output":false,"Format":"","Name":"CreateDocumentConfig","Fields":[{"Annotations":[{"Ignore":false,"FieldName":"filename"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"filename","Type":{"Enum":null,"Scope":"","Truncated":false,"Input":false,"Format":"","ItemType":null,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"AdditionalProperties":null,"AssociatedTypes":[],"BaseName":"","Discriminator":null,"Name":"","Fields":[],"RefType":"","Output":false,"Type":"string"},"Comments":null},{"ErrorMessage":false,"Name":"template_id","Type":{"Output":false,"Examples":[],"AssociatedTypes":[],"Type":"string","ItemType":null,"Fields":[],"Truncated":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Name":"","Discriminator":null,"RefType":"","Scope":"","BaseName":"","Input":false,"AdditionalProperties":null,"Enum":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"template_id"}],"Optional":true,"SerializationMethod":null}],"AssociatedTypes":[],"Comments":null,"Examples":[],"AdditionalProperties":null,"BaseName":"","RefType":"Schemas","Truncated":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"config"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"created_automatically","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","Output":false,"Scope":"","RefType":"","Comments":null,"Input":false,"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Enum":null,"Truncated":false,"Name":"","Fields":[],"AssociatedTypes":[],"BaseName":"","Type":"boolean"},"Comments":{"Summary":"","Description":"Flag indicating whether the action was created automatically or manually","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"created_automatically"}],"Optional":true,"SerializationMethod":null},{"Name":"flow_action_id","Type":{"RefType":"","Input":false,"Output":false,"Discriminator":null,"AssociatedTypes":[],"BaseName":"","Format":"","Type":"string","Enum":null,"Scope":"","Comments":null,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"AdditionalProperties":null,"Name":"","ItemType":null,"Fields":[],"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"flow_action_id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"Enum":null,"Output":false,"AdditionalProperties":null,"Discriminator":null,"Fields":[],"RefType":"","Format":"","Scope":"","BaseName":"","Truncated":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Name":"","Type":"string","ItemType":null,"AssociatedTypes":[],"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id"},{"Name":"name","Type":{"ItemType":null,"BaseName":"","Output":false,"Examples":[],"Name":"","Type":"string","Fields":[],"AssociatedTypes":[],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Scope":"","RefType":"","Truncated":false,"Comments":null,"Input":false,"Format":"","AdditionalProperties":null,"Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"AssociatedTypes":[],"BaseName":"","Input":false,"Output":false,"Name":"CreateDocumentActionConfig_type","ItemType":null,"Enum":{"Type":{"Type":"string","Discriminator":null,"ItemType":null,"Fields":[],"Output":false,"Extensions":{},"Examples":[],"AdditionalProperties":null,"Input":false,"Format":"","Name":"","AssociatedTypes":[],"Scope":"","RefType":"","Truncated":false,"Comments":null,"Enum":null,"BaseName":""},"Values":["create-document"],"Names":[]},"Comments":null,"Format":"","Type":"enum","Fields":[],"Scope":"shared","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"RefType":"","Examples":[],"AdditionalProperties":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}]}],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"CreateDocumentActionConfig"},"Input":false,"Type":"class","AssociatedTypes":[],"Truncated":false,"Output":false,"Examples":[],"Format":"","ItemType":null,"Scope":"shared","Comments":null},{"RefType":"Schemas","ItemType":null,"Comments":null,"Extensions":{"Symbol":"MapEntityActionConfig","x-untouched":true,"x-speakeasy-param-computed":true},"Type":"class","Scope":"shared","Output":false,"Format":"","Fields":[{"Annotations":[{"Ignore":false,"FieldName":"allow_failure"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"allow_failure","Type":{"ItemType":null,"RefType":"","Truncated":false,"Comments":null,"Format":"","Discriminator":null,"Type":"boolean","AssociatedTypes":[],"Scope":"","Input":false,"Output":false,"Name":"","AdditionalProperties":null,"Fields":[],"Enum":null,"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[]},"Comments":{"Summary":"","Description":"Whether to stop execution in a failed state if this action fails","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Type":{"Discriminator":null,"ItemType":null,"Fields":[{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"linkback_relation_attribute","Type":{"Name":"","Fields":[],"Output":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Examples":[],"AdditionalProperties":null,"Enum":null,"Scope":"","RefType":"","Comments":null,"Format":"","Type":"string","AssociatedTypes":[],"BaseName":"","Input":false,"ItemType":null,"Truncated":false,"Discriminator":null},"Comments":{"Summary":"","Description":"Relation attribute on the main entity where the target entity will be linked. Set to false to disable linkback\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"linkback_relation_attribute"}]},{"ErrorMessage":false,"Name":"linkback_relation_tags","Type":{"RefType":"","Input":false,"AdditionalProperties":null,"Output":false,"Examples":[],"Name":"","AssociatedTypes":[],"Scope":"","BaseName":"","Type":"array","Enum":null,"Discriminator":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","ItemType":{"Name":"","ItemType":null,"Enum":null,"Scope":"","Comments":null,"Examples":[],"Type":"string","Output":false,"Format":"","Discriminator":null,"AssociatedTypes":[],"Truncated":false,"Input":false,"Extensions":{"Symbol":"LinkbackRelationTags","x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"BaseName":"","RefType":"","AdditionalProperties":null},"Fields":[],"Truncated":false,"Comments":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Relation tags (labels) to include in main entity linkback relation attribute","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"linkback_relation_tags"}],"Optional":true,"SerializationMethod":null},{"Comments":{"Summary":"","Description":"Attribute mappings","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"mapping_attributes"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"mapping_attributes","Type":{"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Type":"array","Input":false,"Discriminator":null,"Examples":[],"Name":"","Fields":[],"Scope":"","Comments":null,"Truncated":false,"Output":false,"Format":"","AdditionalProperties":null,"ItemType":{"Name":"MapEntityConfig_mapping_attributes","Type":"union","Scope":"shared","Comments":null,"Fields":[],"Truncated":false,"Examples":[],"ItemType":null,"AssociatedTypes":[{"Enum":null,"Examples":[],"Format":"","Fields":[],"AssociatedTypes":[{"RefType":"Schemas","Discriminator":null,"Comments":{"Summary":"","Description":"","ExternalDocs":null,"Deprecated":true,"DeprecationReplacement":"","DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible"},"Output":false,"Examples":[],"AdditionalProperties":null,"Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"mode","Type":{"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","Name":"MappingAttributeMode","ItemType":null,"RefType":"Schemas","Enum":{"Type":{"Scope":"","Enum":null,"RefType":"","Truncated":false,"Input":false,"Extensions":{},"AdditionalProperties":null,"ItemType":null,"Fields":[],"AssociatedTypes":[],"Examples":[],"Format":"","Discriminator":null,"Name":"","BaseName":"","Comments":null,"Output":false,"Type":"string"},"Values":["copy_if_exists","append_if_exists","set_value"],"Names":[]},"BaseName":"","Truncated":false,"Output":false,"Discriminator":null,"Type":"enum","Fields":[],"Scope":"shared","Comments":{"Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Input":false,"AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false},"Annotations":[{"FieldName":"mode","Ignore":false}]},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"source","Type":{"Examples":[],"Scope":"","Output":false,"Discriminator":null,"RefType":"","AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Format":"","Type":"string","Fields":[],"Truncated":false,"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","ItemType":null},"Comments":{"Summary":"","Description":"JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"source"}]},{"SerializationMethod":null,"ErrorMessage":false,"Name":"target","Type":{"BaseName":"","Comments":null,"Discriminator":null,"Type":"string","ItemType":null,"Enum":null,"Truncated":false,"Scope":"","RefType":"","Output":false,"Examples":[],"AdditionalProperties":null,"Name":"","Fields":[],"AssociatedTypes":[],"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":""},"Comments":{"Summary":"","Description":"JSON like target path for the attribute. Eg. last_name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"target_unique","Type":{"Fields":[],"BaseName":"","RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"AdditionalProperties":null,"ItemType":{"AssociatedTypes":[],"Scope":"","BaseName":"","Name":"","Type":"string","Input":false,"Output":false,"Discriminator":null,"RefType":"","Comments":null,"Format":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Examples":[],"Enum":null,"Truncated":false,"AdditionalProperties":null,"ItemType":null,"Fields":[]},"Format":"","Name":"","AssociatedTypes":[],"Enum":null,"Scope":"","Input":false,"Output":false,"Discriminator":null,"Type":"array","Comments":null},"Comments":{"Description":"Array of keys which should be used when checking for uniqueness. Eg: [country, city, postal_code]\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"target_unique"}],"Optional":true},{"Type":{"Name":"","Scope":"","Input":false,"Output":false,"Format":"","Fields":[],"Enum":null,"BaseName":"","Examples":[],"Discriminator":null,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Type":"string","ItemType":null,"AssociatedTypes":[],"RefType":"","Comments":null,"AdditionalProperties":null},"Comments":{"Summary":"","Description":"To be provided only when mapping json objects into a target attribute. Eg array of addresses.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value_json"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value_json"}],"Enum":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"AppendValueMapper"},"Name":"AppendValueMapper","Type":"class","ItemType":null,"AssociatedTypes":[],"Scope":"shared","BaseName":"","Truncated":false,"Format":""},{"ItemType":null,"Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"mode","Type":{"Name":"MappingAttributeMode","AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"BaseName":"","RefType":"Schemas","Input":false,"Type":"enum","Fields":[],"Scope":"shared","Examples":[],"Format":"","AdditionalProperties":null,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null},"Output":false,"Discriminator":null,"ItemType":null,"Enum":{"Type":{"Name":"","ItemType":null,"Truncated":false,"RefType":"","Output":false,"Examples":[],"AdditionalProperties":null,"Discriminator":null,"Extensions":{},"Type":"string","Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Comments":null,"Input":false,"Format":"","Enum":null},"Values":["copy_if_exists","append_if_exists","set_value"],"Names":[]},"Truncated":false},"Comments":{"DeprecationMessage":"","Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"mode"}]},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"source","Type":{"ItemType":null,"Scope":"","AssociatedTypes":[],"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Name":"","Type":"string","Fields":[],"Discriminator":null,"RefType":"","Truncated":false,"AdditionalProperties":null,"Examples":[],"Enum":null,"BaseName":"","Comments":null},"Comments":{"Description":"JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price\n","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"source","Ignore":false}]},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"target","Type":{"Fields":[],"Examples":[],"ItemType":null,"AssociatedTypes":[],"BaseName":"","Input":false,"Name":"","Enum":null,"Scope":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","RefType":"","Truncated":false,"Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":""},"Comments":{"Summary":"","Description":"JSON like target path for the attribute. Eg. last_name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"target"}]}],"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"CopyValueMapper"},"RefType":"Schemas","Comments":{"Summary":"","Description":"","ExternalDocs":null,"Deprecated":true,"DeprecationReplacement":"","DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible"},"Examples":[],"Input":false,"Output":false,"Format":"","Name":"CopyValueMapper","Type":"class","Scope":"shared","BaseName":"","Truncated":false},{"Examples":[],"Name":"SetValueMapper","Type":"class","Scope":"shared","BaseName":"","RefType":"Schemas","Output":false,"Extensions":{"x-speakeasy-param-computed":true,"Symbol":"SetValueMapper","x-untouched":true},"Format":"","Discriminator":null,"AdditionalProperties":null,"ItemType":null,"Fields":[{"Name":"mode","Type":{"Enum":{"Type":{"Fields":[],"AssociatedTypes":[],"Input":false,"Scope":"","Extensions":{},"AdditionalProperties":null,"BaseName":"","Examples":[],"Format":"","Discriminator":null,"Type":"string","ItemType":null,"Enum":null,"Comments":null,"Output":false,"Name":"","RefType":"","Truncated":false},"Values":["copy_if_exists","append_if_exists","set_value"],"Names":[]},"BaseName":"","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null},"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Examples":[],"Truncated":false,"Input":false,"Format":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"ItemType":null,"Scope":"shared","RefType":"Schemas","AdditionalProperties":null,"Name":"MappingAttributeMode","Type":"enum"},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.\n","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"mode"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"target","Type":{"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","Discriminator":null,"Name":"","Enum":null,"Truncated":false,"AssociatedTypes":[],"RefType":"","Comments":null,"Output":false,"AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"Scope":"","BaseName":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"JSON like target path for the attribute. Eg. last_name","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Comments":null,"Examples":[],"AdditionalProperties":null,"Discriminator":null,"Enum":null,"BaseName":"","Truncated":false,"Input":false,"Name":"","ItemType":null,"Fields":[],"AssociatedTypes":[],"RefType":"","Type":"any","Scope":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Any value to be set: string, number, string[], number[], JSON object, etc. It will override existing values, if any.\n"},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false}],"Truncated":false,"Comments":{"DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible","Summary":"","Description":"","ExternalDocs":null,"Deprecated":true,"DeprecationReplacement":""},"Input":false,"AssociatedTypes":[],"Enum":null}],"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"MappingAttribute"},"Name":"MappingAttribute","Type":"union","ItemType":null,"AdditionalProperties":null,"Discriminator":null,"Scope":"shared","Output":false,"BaseName":"","RefType":"Schemas","Truncated":false},{"Discriminator":null,"BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"MappingAttributeV21"},"ItemType":null,"Examples":[],"Format":"","Enum":null,"Scope":"shared","RefType":"Schemas","AdditionalProperties":null,"Name":"MappingAttributeV2","Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"operation","Type":{"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"OperationNode1"},"Type":"union","Fields":[],"RefType":"Schemas","Discriminator":null,"AssociatedTypes":[{"Type":"any","BaseName":"","Output":false,"Format":"","ItemType":null,"Enum":null,"Truncated":false,"Name":"","Scope":"","RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Comments":null,"Input":false,"Examples":[]},{"RefType":"Schemas","Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Mapping operation nodes are either primitive values or operation node objects","ExternalDocs":null,"Deprecated":false},"Input":false,"Scope":"shared","Type":"class","ItemType":null,"BaseName":"","Name":"OperationObjectNode","AssociatedTypes":[],"Enum":null,"Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"OperationObjectNode1"},"AdditionalProperties":{"SerializationMethod":null,"ErrorMessage":false,"Name":"AdditionalProperties","Type":{"ItemType":null,"Truncated":false,"Extensions":{},"Format":"","AdditionalProperties":null,"Examples":[],"Name":"","Enum":null,"Scope":"","BaseName":"","Comments":null,"Input":false,"Fields":[],"AssociatedTypes":[],"RefType":"","Type":"any","Output":false,"Discriminator":null},"Comments":null,"Annotations":[{"FieldName":"-","Ignore":true}],"Optional":true},"Fields":[{"Type":{"Fields":[],"Enum":null,"Comments":null,"Format":"","ItemType":{"Name":"","Fields":[],"Enum":null,"Input":false,"Output":false,"Type":"any","AssociatedTypes":[],"RefType":"","Comments":null,"Examples":[],"Format":"","AdditionalProperties":null,"ItemType":null,"Scope":"","BaseName":"","Truncated":false,"Extensions":{"Symbol":"Append","x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null},"BaseName":"","RefType":"","Truncated":false,"Output":false,"Name":"","Type":"array","AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Scope":"","Input":false,"Examples":[],"Discriminator":null},"Comments":{"Summary":"","Description":"Append to array","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"_append"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"_append"},{"Annotations":[{"Ignore":false,"FieldName":"_copy"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"_copy","Type":{"Name":"","BaseName":"","RefType":"","Truncated":false,"Input":false,"Output":false,"Format":"","Type":"string","Enum":null,"Scope":"","Comments":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Examples":["contact.first_name"]},"Comments":{"Summary":"","Description":"Copy JSONPath value from source entity context","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Name":"_set","Type":{"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Enum":null,"Type":"any","RefType":"","Truncated":false,"Examples":[],"AdditionalProperties":null,"Name":"","Fields":[],"Scope":"","Comments":null,"Output":false,"ItemType":null,"Input":false,"Discriminator":null,"AssociatedTypes":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"_set"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"DeprecationMessage":"","Summary":"","Description":"Unique array","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"FieldName":"_uniq","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"_uniq","Type":{"Format":"","ItemType":null,"AssociatedTypes":[{"Output":false,"Discriminator":null,"Name":"","Truncated":false,"Enum":null,"Scope":"","Input":false,"ItemType":null,"Fields":[],"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[true],"AdditionalProperties":null,"Type":"boolean","RefType":"","Format":"","AssociatedTypes":[],"BaseName":""},{"ItemType":{"AssociatedTypes":[],"BaseName":"","Truncated":false,"Fields":[],"Input":false,"Format":"","AdditionalProperties":null,"Scope":"","RefType":"","Extensions":{"x-untouched":true,"Symbol":"LinkbackRelationTags"},"Examples":[],"Comments":null,"Output":false,"Discriminator":null,"Name":"","Type":"string","ItemType":null,"Enum":null},"AssociatedTypes":[],"BaseName":"","Output":false,"Format":"","AdditionalProperties":null,"Truncated":false,"Scope":"","RefType":"","Examples":[],"Discriminator":null,"Name":"","Type":"array","Fields":[],"Enum":null,"Comments":null,"Input":false,"Extensions":{"x-untouched":true}}],"Scope":"shared","Input":false,"Type":"union","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"OperationObjectNodeUniq"},"Examples":[],"Truncated":false,"Output":false,"Fields":[],"Enum":null,"BaseName":"","RefType":"","Name":"OperationObjectNode__uniq","AdditionalProperties":null,"Discriminator":null}}],"Format":"","Discriminator":null,"Examples":[]}],"Enum":null,"BaseName":"","Truncated":false,"Output":false,"Examples":[],"AdditionalProperties":null,"Name":"OperationNode","ItemType":null,"Scope":"shared","Comments":null,"Format":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Mapping operation nodes are either primitive values or operation node objects"},"Annotations":[{"FieldName":"operation","Ignore":false}],"Optional":false},{"Comments":{"Summary":"","Description":"Target JSON path for the attribute to set","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target","Type":{"AssociatedTypes":[],"Comments":null,"Format":"","Type":"string","Scope":"","Truncated":false,"Output":false,"Name":"","Enum":null,"BaseName":"","Input":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Discriminator":null,"Fields":[],"RefType":"","Examples":[],"AdditionalProperties":null,"ItemType":null}}],"AssociatedTypes":[],"Output":false,"Type":"class","Truncated":false,"Comments":null}],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"MapEntityConfigMappingAttributes"},"AdditionalProperties":null,"Discriminator":null,"BaseName":"","RefType":"","Input":false,"Output":false,"Format":""},"AssociatedTypes":[],"BaseName":"","RefType":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"mapping_config","Type":{"ItemType":null,"Truncated":false,"Format":"","Enum":null,"BaseName":"","Comments":null,"Discriminator":null,"Name":"MappingConfigRef","AssociatedTypes":[],"Input":false,"RefType":"Schemas","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"MappingConfigRef"},"Examples":[],"AdditionalProperties":null,"Type":"class","Fields":[{"Name":"config_id","Type":{"AssociatedTypes":[],"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Comments":null,"Output":false,"Discriminator":null,"BaseName":"","RefType":"","Input":false,"Examples":[],"Scope":"","Format":"","AdditionalProperties":null,"Name":"","Type":"string","ItemType":null,"Fields":[],"Enum":null},"Comments":{"Summary":"","Description":"Id of Entity Mapping Configuration to run for mapping.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"config_id"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"target_id","Type":{"BaseName":"","Discriminator":null,"AdditionalProperties":null,"Fields":[],"Truncated":false,"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Name":"","Type":"string","AssociatedTypes":[],"Scope":"","ItemType":null,"Enum":null,"RefType":"","Output":false,"Format":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Id of TargetConfig to run for mapping.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"target_id"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"version","Type":{"Name":"","RefType":"","Examples":[],"ItemType":null,"Enum":null,"Comments":null,"Input":false,"Output":false,"Type":"number","Fields":[],"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"AssociatedTypes":[],"Scope":"","Truncated":false,"Format":"","Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Version of Entity Mapping Configuration to run for mapping.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"FieldName":"version","Ignore":false}],"Optional":true,"SerializationMethod":null}],"Scope":"shared"},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"mapping_config"}]},{"SerializationMethod":null,"ErrorMessage":false,"Name":"relation_attributes","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Scope":"","Examples":[],"Enum":null,"Truncated":false,"Input":false,"Output":false,"Format":"","RefType":"","Type":"array","ItemType":{"Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"mode","Type":{"Type":"enum","Fields":[],"Scope":"shared","Comments":null,"Input":false,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":{"Values":["append","prepend","set"],"Names":[],"Type":{"Input":false,"Output":false,"Extensions":{},"Fields":[],"Enum":null,"Scope":"","BaseName":"","AssociatedTypes":[],"RefType":"","Discriminator":null,"Name":"","Comments":null,"Examples":[],"AdditionalProperties":null,"Type":"string","ItemType":null,"Truncated":false,"Format":""}},"Truncated":false,"Format":"","ItemType":null,"BaseName":"","RefType":"","Output":false,"Name":"RelationAttribute_mode","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"mode"}]},{"SerializationMethod":null,"ErrorMessage":false,"Name":"related_to","Type":{"RefType":"","Enum":null,"Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","ItemType":{"Fields":[],"Input":false,"Name":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"ItemType":null,"Scope":"","Comments":null,"Output":false,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Examples":[],"Format":"","Type":"any"},"AssociatedTypes":[],"BaseName":"","Comments":null,"Input":false,"Name":"","Fields":[],"Scope":"","Examples":[],"AdditionalProperties":null,"Discriminator":null,"Type":"map"},"Comments":{"Description":"","ExternalDocs":null,"Deprecated":true,"DeprecationReplacement":"","DeprecationMessage":"This will be removed in a future release, please migrate away from it as soon as possible","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"related_to"}],"Optional":true},{"Name":"source_filter","Type":{"ItemType":null,"Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"attribute","Type":{"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Name":"","Enum":null,"RefType":"","Examples":[],"Discriminator":null,"AdditionalProperties":null,"ItemType":null,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Comments":null,"Type":"string","Truncated":false},"Comments":{"Summary":"","Description":"Filter by a specific relation attribute on the main entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"attribute","Ignore":false}],"Optional":true},{"Type":{"Name":"","Type":"integer","AssociatedTypes":[],"Input":false,"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Scope":"","RefType":"","Truncated":false,"Comments":null,"Output":false,"Enum":null,"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Fields":[],"Format":""},"Comments":{"Summary":"","Description":"Limit relations to maximum number (default, all matched relations)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"limit"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"limit"},{"SerializationMethod":null,"ErrorMessage":false,"Name":"relation_tag","Type":{"Type":"string","ItemType":null,"Fields":[],"Name":"","AssociatedTypes":[],"RefType":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Truncated":false,"Comments":null,"Discriminator":null,"AdditionalProperties":null,"Enum":null,"Scope":"","BaseName":"","Input":false,"Examples":[],"Format":""},"Comments":{"Summary":"","Description":"Filter by relation tag (label) on the main entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"relation_tag","Ignore":false}],"Optional":true},{"Comments":{"Summary":"","Description":"Filter by specific schema","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"schema"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"schema","Type":{"Enum":null,"Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","Type":"string","ItemType":null,"AssociatedTypes":[],"Scope":"","BaseName":"","RefType":"","Truncated":false,"AdditionalProperties":null,"Discriminator":null,"Name":"","Fields":[],"Input":false}},{"Annotations":[{"Ignore":false,"FieldName":"self"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"self","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"Scope":"","RefType":"","Examples":[],"AdditionalProperties":null,"Input":false,"Output":false,"Truncated":false,"Comments":null,"Format":"","Name":"","BaseName":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Type":"boolean","ItemType":null},"Comments":{"Description":"Picks main entity as relation (overrides other filters)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}},{"ErrorMessage":false,"Name":"tag","Type":{"Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Fields":[],"AssociatedTypes":[],"RefType":"","Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Name":"","BaseName":"","Input":false,"Truncated":false,"Comments":null,"Output":false,"Type":"string","ItemType":null,"Enum":null,"Scope":""},"Comments":{"Description":"Filter by a specific tag on the related entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"tag","Ignore":false}],"Optional":true,"SerializationMethod":null}],"Scope":"shared","BaseName":"","RefType":"","Input":false,"Discriminator":null,"AssociatedTypes":[],"Truncated":false,"Format":"","Comments":{"Summary":"","Description":"A filter to identify which source entities to pick as relations from main entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"RelationAttributeSourceFilter"},"AdditionalProperties":null,"Name":"RelationAttribute_source_filter","Type":"class","Enum":null,"Output":false,"Examples":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A filter to identify which source entities to pick as relations from main entity","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"source_filter"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"target","Type":{"Name":"","BaseName":"","Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"","Input":false,"Output":false,"Enum":null,"RefType":"","Truncated":false,"Discriminator":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Type":"string","ItemType":null,"Fields":[],"Comments":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Target attribute to store the relation in","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"target"}],"Optional":false,"SerializationMethod":null},{"Name":"target_tags","Type":{"ItemType":{"AdditionalProperties":null,"Discriminator":null,"Name":"","Truncated":false,"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"ItemType":null,"AssociatedTypes":[],"Input":false,"Output":false,"Format":"","Type":"string","Enum":null,"RefType":"","Comments":null,"Examples":[],"Fields":[],"BaseName":""},"Enum":null,"Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Type":"array","BaseName":"","RefType":"","Comments":null,"Examples":[],"Name":"","Fields":[],"AssociatedTypes":[],"Scope":"","Format":"","Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Relation tags (labels) to set for the stored relations","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"target_tags"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"target_tags_include_source"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_tags_include_source","Type":{"Name":"","Enum":null,"Truncated":false,"Comments":null,"Discriminator":null,"Type":"boolean","AssociatedTypes":[],"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"Scope":"","Format":"","AdditionalProperties":null,"ItemType":null,"BaseName":"","RefType":"","Input":false,"Examples":[]},"Comments":{"Summary":"","Description":"Include all relation tags (labels) present on the main entity relation","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}}],"Scope":"shared","Output":false,"Type":"class","Enum":null,"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"RelationAttribute"},"Format":"","Examples":[],"AdditionalProperties":null,"ItemType":null,"BaseName":"","Truncated":false,"Comments":null,"Input":false,"Name":"RelationAttribute","AssociatedTypes":[],"Discriminator":null},"Fields":[],"AssociatedTypes":[],"BaseName":"","Comments":null,"Discriminator":null,"Name":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Relation mappings","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"relation_attributes"}],"Optional":true},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_schema","Type":{"RefType":"","Name":"","Enum":null,"Scope":"","Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"ItemType":null,"BaseName":"","Truncated":false,"Output":false,"Fields":[],"Comments":null,"Input":false},"Comments":{"Summary":"","Description":"Schema of target entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"target_schema","Ignore":false}]},{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Unique key for target entity (see upsertEntity of Entity API)","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"target_unique"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_unique","Type":{"Name":"","Type":"array","Scope":"","Comments":null,"Format":"","ItemType":{"Output":false,"Format":"","Type":"string","Fields":[],"Scope":"","BaseName":"","Name":"","RefType":"","Truncated":false,"AdditionalProperties":null,"Discriminator":null,"Enum":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Examples":[],"ItemType":null,"AssociatedTypes":[],"Comments":null},"RefType":"","Output":false,"Examples":[],"AssociatedTypes":[],"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"Enum":null,"BaseName":"","Truncated":false,"AdditionalProperties":null,"Discriminator":null}}],"Enum":null,"Truncated":false,"AdditionalProperties":null,"Examples":[],"Name":"MapEntityConfig","Type":"class","BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"MapEntityConfig"},"RefType":"Schemas","Format":"","AssociatedTypes":[],"Scope":"shared","Comments":null,"Input":false},"Comments":null,"Annotations":[{"FieldName":"config","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"config"},{"ErrorMessage":false,"Name":"created_automatically","Type":{"Comments":null,"Discriminator":null,"Enum":null,"BaseName":"","RefType":"","Fields":[],"AssociatedTypes":[],"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Name":"","Type":"boolean","ItemType":null,"Format":"","Scope":"","Input":false,"Examples":[],"Truncated":false,"Output":false,"AdditionalProperties":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Flag indicating whether the action was created automatically or manually"},"Annotations":[{"Ignore":false,"FieldName":"created_automatically"}],"Optional":true,"SerializationMethod":null},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"flow_action_id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"flow_action_id","Type":{"Fields":[],"Comments":null,"BaseName":"","RefType":"","Input":false,"Output":false,"Type":"string","ItemType":null,"Scope":"","Truncated":false,"Format":"","AdditionalProperties":null,"Name":"","AssociatedTypes":[],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Discriminator":null}},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"ItemType":null,"Input":false,"Output":false,"Name":"","Type":"string","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Truncated":false,"Comments":null,"AdditionalProperties":null,"Discriminator":null,"Fields":[],"Enum":null,"BaseName":"","RefType":"","Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Format":"","AssociatedTypes":[],"Scope":""}},{"ErrorMessage":false,"Name":"name","Type":{"AssociatedTypes":[],"Input":false,"Examples":[],"Discriminator":null,"Name":"","AdditionalProperties":null,"ItemType":null,"RefType":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"BaseName":"","Fields":[],"Enum":null,"Scope":"","Truncated":false,"Output":false,"Format":"","Type":"string"},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":true,"SerializationMethod":null},{"Name":"type","Type":{"Fields":[],"AssociatedTypes":[],"Output":false,"Examples":[],"Format":"","Type":"enum","ItemType":null,"Enum":{"Names":[],"Type":{"ItemType":null,"Fields":[],"Comments":null,"Extensions":{},"Examples":[],"Scope":"","BaseName":"","RefType":"","AdditionalProperties":null,"Type":"string","AssociatedTypes":[],"Discriminator":null,"Name":"","Enum":null,"Truncated":false,"Input":false,"Output":false,"Format":""},"Values":["map-entity"]},"Input":false,"Discriminator":null,"Scope":"shared","BaseName":"","Truncated":false,"Comments":null,"AdditionalProperties":null,"Name":"MapEntityActionConfig_type","RefType":"","Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true}},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false,"Input":false,"Examples":[],"AdditionalProperties":null,"Name":"MapEntityActionConfig","Discriminator":null},{"RefType":"Schemas","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"SendEmailActionConfig"},"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"Scope":"shared","Fields":[{"ErrorMessage":false,"Name":"allow_failure","Type":{"ItemType":null,"AssociatedTypes":[],"Scope":"","RefType":"","Truncated":false,"Format":"","AdditionalProperties":null,"Type":"boolean","Fields":[],"Enum":null,"BaseName":"","Output":false,"Name":"","Discriminator":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Comments":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether to stop execution in a failed state if this action fails","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"allow_failure"}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"config"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"config","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"SendEmailConfig"},"Examples":[],"Discriminator":null,"RefType":"Schemas","Type":"class","Scope":"shared","BaseName":"","Truncated":false,"Input":false,"Output":false,"Name":"SendEmailConfig","Enum":null,"Comments":null,"AdditionalProperties":null,"Fields":[{"Annotations":[{"FieldName":"attachments","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"attachments","Type":{"AssociatedTypes":[],"RefType":"","Name":"","Type":"array","Format":"","Enum":null,"Examples":[],"BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Discriminator":null,"ItemType":{"Fields":[{"Name":"source_filter","Type":{"Input":false,"Extensions":{"x-speakeasy-param-computed":true,"Symbol":"SendEmailConfigAttachmentsSourceFilter","x-untouched":true},"Format":"","Name":"SendEmailConfig_attachments_source_filter","AssociatedTypes":[],"Comments":{"Summary":"","Description":"Specify filters to match file entities related to main entity","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Discriminator":null,"RefType":"","Truncated":false,"Scope":"shared","BaseName":"","Output":false,"AdditionalProperties":null,"Fields":[{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Filter by a specific relation attribute on the main entity","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"attribute"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"attribute","Type":{"Enum":null,"Truncated":false,"ItemType":null,"AssociatedTypes":[],"RefType":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Input":false,"Examples":["_files"],"Discriminator":null,"Format":"","AdditionalProperties":null,"Name":"","Type":"string","Fields":[],"Scope":"","BaseName":"","Output":false}},{"Name":"document_type","Type":{"Name":"SendEmailConfig_attachments_source_filter_document_type","Fields":[],"Input":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"AdditionalProperties":null,"Scope":"shared","Truncated":false,"Output":false,"Examples":[],"Format":"","Enum":{"Type":{"Type":"string","ItemType":null,"Truncated":false,"Comments":null,"AdditionalProperties":null,"AssociatedTypes":[],"RefType":"","Name":"","Fields":[],"Enum":null,"Scope":"","BaseName":"","Examples":[],"Format":"","Input":false,"Output":false,"Extensions":{},"Discriminator":null},"Values":["document","text","image","video","audio","spreadsheet","presentation","font","archive","application","unknown"],"Names":[]},"Type":"enum","ItemType":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Comments":{"Summary":"","Description":"Filter by a specific document type (e.g. document)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Discriminator":null},"Comments":{"Summary":"","Description":"Filter by a specific document type (e.g. document)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"document_type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"filename_regex","Type":{"Type":"string","Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","BaseName":"","RefType":"","Truncated":false,"Input":false,"AdditionalProperties":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","Examples":[".*"],"Format":"","Discriminator":null,"ItemType":null,"Comments":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Match by filename. Regex syntax supported"},"Annotations":[{"Ignore":false,"FieldName":"filename_regex"}],"Optional":true},{"Name":"limit","Type":{"Name":"","BaseName":"","Output":false,"Format":"","Scope":"","AdditionalProperties":null,"Discriminator":null,"Type":"integer","Fields":[],"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Comments":null,"Input":false,"Examples":[1],"ItemType":null,"AssociatedTypes":[],"Enum":null,"Truncated":false},"Comments":{"Summary":"","Description":"Limit files to maximum number (default, all matched file relations)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"limit"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"Scope":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Name":"","Fields":[],"Enum":null,"Output":false,"Examples":["contract"],"ItemType":null,"Comments":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Input":false,"AdditionalProperties":null,"Discriminator":null,"Type":"string"},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Filter by relation tag (label) on the main entity","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"relation_tag"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"relation_tag"},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"self","Type":{"Examples":[],"Format":"","AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"RefType":"","Scope":"","BaseName":"","Input":false,"Name":"","Type":"boolean","Enum":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"ItemType":null,"Truncated":false,"Comments":null},"Comments":{"Description":"Picks main entity as file (only works if source entity is a file)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"self"}]},{"Name":"tag","Type":{"Format":"","AdditionalProperties":null,"Discriminator":null,"Name":"","Type":"string","ItemType":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false,"Examples":[],"Fields":[],"Scope":"","RefType":"","Comments":null,"Input":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Filter by a specific tag on the related file entity","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"tag"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Enum":null,"Examples":[],"Type":"class","ItemType":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Specify filters to match file entities related to main entity","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"source_filter"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Input":false,"Output":false,"Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Comments":null,"AdditionalProperties":null,"Type":"class","Truncated":false,"Format":"","Name":"SendEmailConfig_attachments","Scope":"shared","BaseName":"","RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"SendEmailConfigAttachments"},"Examples":[],"Enum":null},"Fields":[],"Input":false,"Output":false,"Scope":"","Comments":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Include extra file attachments in sent email.\n\nAttachments in email template will be sent regardless of this configuration.\n"}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"email_template_id","Type":{"Input":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"AssociatedTypes":[],"BaseName":"","Scope":"","Examples":[],"Name":"","Enum":null,"AdditionalProperties":null,"Discriminator":null,"RefType":"","Output":false,"Fields":[],"Truncated":false,"Comments":null,"Format":"","Type":"string","ItemType":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"email_template_id"}],"Optional":true},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"language_code","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Name":"SendEmailConfig_language_code","ItemType":null,"Enum":{"Values":["de","en"],"Names":[],"Type":{"BaseName":"","Extensions":{},"AssociatedTypes":[],"Enum":null,"Output":false,"ItemType":null,"Truncated":false,"AdditionalProperties":null,"Discriminator":null,"RefType":"","Input":false,"Fields":[],"Scope":"","Comments":null,"Examples":[],"Format":"","Name":"","Type":"string"}},"Output":false,"BaseName":"","Comments":null,"Examples":[],"Fields":[],"RefType":"","Format":"","Discriminator":null,"Input":false,"Type":"enum","AssociatedTypes":[],"Scope":"shared","Truncated":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"language_code"}]}],"AssociatedTypes":[],"Format":"","ItemType":null},"Comments":null},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"created_automatically","Type":{"ItemType":null,"Scope":"","Type":"boolean","BaseName":"","RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Discriminator":null,"Fields":[],"Comments":null,"Input":false,"Output":false,"AdditionalProperties":null,"Name":"","AssociatedTypes":[],"Enum":null,"Truncated":false,"Format":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Flag indicating whether the action was created automatically or manually","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"created_automatically"}]},{"Annotations":[{"Ignore":false,"FieldName":"flow_action_id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"flow_action_id","Type":{"Name":"","Truncated":false,"Comments":null,"AdditionalProperties":null,"Discriminator":null,"Input":false,"Output":false,"Type":"string","Enum":null,"BaseName":"","RefType":"","Format":"","ItemType":null,"Fields":[],"AssociatedTypes":[],"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"]},"Comments":null},{"Name":"id","Type":{"AssociatedTypes":[],"Truncated":false,"Comments":null,"AdditionalProperties":null,"Discriminator":null,"Enum":null,"RefType":"","Output":false,"Name":"","Type":"string","Input":false,"Format":"","ItemType":null,"Fields":[],"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"name","Type":{"AdditionalProperties":null,"Name":"","BaseName":"","Comments":null,"Output":false,"Examples":[],"Format":"","Type":"string","AssociatedTypes":[],"Scope":"","Fields":[],"Enum":null,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"ItemType":null,"RefType":"","Truncated":false,"Input":false,"Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":true,"SerializationMethod":null},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"ItemType":null,"Examples":[],"AdditionalProperties":null,"Name":"SendEmailActionConfig_type","Type":"enum","Truncated":false,"Output":false,"Discriminator":null,"AssociatedTypes":[],"Enum":{"Type":{"Enum":null,"Discriminator":null,"Input":false,"AdditionalProperties":null,"Name":"","AssociatedTypes":[],"Truncated":false,"Extensions":{},"Examples":[],"Format":"","ItemType":null,"BaseName":"","RefType":"","Comments":null,"Output":false,"Type":"string","Fields":[],"Scope":""},"Values":["send-email"],"Names":[]},"Scope":"shared","BaseName":"","Comments":null,"Input":false,"Format":"","Fields":[],"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":null,"Annotations":[{"FieldName":"type","Ignore":false}]}],"Truncated":false,"Discriminator":null,"Type":"class","Examples":[],"Comments":null,"Output":false,"Name":"SendEmailActionConfig","ItemType":null,"BaseName":""},{"BaseName":"","Input":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Name":"TriggerWebhookActionConfig","Enum":null,"Fields":[{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"allow_failure","Type":{"AssociatedTypes":[],"Scope":"","Truncated":false,"Output":false,"Name":"","AdditionalProperties":null,"Fields":[],"Comments":null,"Examples":[],"Format":"","BaseName":"","ItemType":null,"Enum":null,"RefType":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"Type":"boolean"},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether to stop execution in a failed state if this action fails","ExternalDocs":null},"Annotations":[{"FieldName":"allow_failure","Ignore":false}]},{"Name":"config","Type":{"Name":"TriggerWebhookConfig","Output":false,"Extensions":{"x-speakeasy-param-computed":true,"Symbol":"TriggerWebhookConfig","x-untouched":true},"AdditionalProperties":null,"ItemType":null,"BaseName":"","Comments":null,"Examples":[],"Format":"","Enum":null,"Discriminator":null,"Type":"class","Fields":[{"Name":"entity_sources","Type":{"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false,"Output":false,"Name":"","Type":"array","Fields":[],"Discriminator":null,"ItemType":{"Input":false,"Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Fields":[],"AssociatedTypes":[],"BaseName":"","Output":false,"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Enum":null,"Scope":"","ItemType":null,"Truncated":false,"Comments":null,"Name":"","Type":"string"},"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"RefType":"","Input":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"entity_sources"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_webhook_id","Type":{"ItemType":null,"BaseName":"","RefType":"","Examples":[],"Discriminator":null,"Name":"","Scope":"","Format":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Comments":null,"AdditionalProperties":null,"Type":"string","Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"target_webhook_id"}]}],"AssociatedTypes":[],"Scope":"shared","RefType":"Schemas","Truncated":false,"Input":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"config"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"created_automatically","Type":{"Comments":null,"Input":false,"Discriminator":null,"Fields":[],"BaseName":"","Format":"","AdditionalProperties":null,"ItemType":null,"Output":false,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Name":"","RefType":"","Enum":null,"Scope":"","Type":"boolean","AssociatedTypes":[]},"Comments":{"Description":"Flag indicating whether the action was created automatically or manually","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"created_automatically"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"flow_action_id","Type":{"Enum":null,"Scope":"","RefType":"","Truncated":false,"Output":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Fields":[],"AssociatedTypes":[],"BaseName":"","Comments":null,"Name":"","ItemType":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Type":"string","Format":"","Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"flow_action_id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"Input":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Format":"","Discriminator":null,"AssociatedTypes":[],"RefType":"","Comments":null,"Truncated":false,"Name":"","Type":"string","BaseName":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Output":false,"ItemType":null,"Fields":[],"Enum":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true},{"ErrorMessage":false,"Name":"name","Type":{"Scope":"","Truncated":false,"Type":"string","Comments":null,"ItemType":null,"Enum":null,"BaseName":"","Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"AdditionalProperties":null,"Name":"","AssociatedTypes":[],"RefType":"","Format":"","Discriminator":null,"Fields":[]},"Comments":null,"Annotations":[{"FieldName":"name","Ignore":false}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Type":"enum","Fields":[],"Scope":"shared","Output":false,"Comments":null,"Examples":[],"Format":"","AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"TriggerWebhookActionConfig_type","Enum":{"Names":[],"Type":{"Type":"string","Fields":[],"Truncated":false,"Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Examples":[],"Name":"","Enum":null,"Scope":"","Output":false,"Format":"","AdditionalProperties":null,"BaseName":"","RefType":"","Comments":null,"Input":false,"Extensions":{}},"Values":["trigger-webhook"]},"BaseName":"","Input":false,"Discriminator":null},"Comments":null}],"Scope":"shared","RefType":"Schemas","Comments":null,"ItemType":null,"AssociatedTypes":[],"Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"TriggerWebhookActionConfig"},"Examples":[],"Type":"class"},{"Examples":[],"BaseName":"","RefType":"Schemas","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"TriggerWorkflowActionConfig"},"AdditionalProperties":null,"Scope":"shared","AssociatedTypes":[],"Truncated":false,"Input":false,"Discriminator":null,"Name":"TriggerWorkflowActionConfig","ItemType":null,"Fields":[{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"allow_failure","Type":{"Type":"boolean","ItemType":null,"RefType":"","Output":false,"Name":"","Fields":[],"Scope":"","BaseName":"","AdditionalProperties":null,"Enum":null,"Comments":null,"Input":false,"Examples":[],"Format":"","AssociatedTypes":[],"Truncated":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Discriminator":null},"Comments":{"Summary":"","Description":"Whether to stop execution in a failed state if this action fails","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"allow_failure"}]},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"config"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"config","Type":{"Name":"TriggerWorkflowConfig","Fields":[{"Annotations":[{"Ignore":false,"FieldName":"assign_steps"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"assign_steps","Type":{"Enum":null,"Comments":null,"Input":false,"Format":"","AdditionalProperties":null,"Type":"array","ItemType":{"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"AssignUsersToStep"},"Discriminator":null,"Truncated":false,"Input":false,"Output":false,"Format":"","Name":"AssignUsersToStep","ItemType":null,"Enum":null,"BaseName":"","AdditionalProperties":null,"Type":"class","Fields":[{"Annotations":[{"Ignore":false,"FieldName":"step_id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"step_id","Type":{"AssociatedTypes":[],"RefType":"","Comments":null,"Input":false,"Type":"string","ItemType":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","AdditionalProperties":null,"Enum":null,"Scope":"","BaseName":"","Truncated":false,"Examples":[],"Name":"","Output":false,"Discriminator":null},"Comments":null},{"Name":"step_name","Type":{"Type":"string","Scope":"","Output":false,"AdditionalProperties":null,"Name":"","Fields":[],"BaseName":"","Discriminator":null,"Truncated":false,"Format":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"ItemType":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Comments":null,"Input":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"step_name"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"user_ids","Type":{"Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null,"AdditionalProperties":null,"Type":"array","ItemType":{"Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Examples":[],"Format":"","AdditionalProperties":null,"ItemType":null,"Scope":"","Truncated":false,"BaseName":"","Comments":null,"Output":false,"Type":"number","Enum":null,"RefType":"","Input":false,"Extensions":{"Symbol":"UserIds","x-untouched":true,"x-speakeasy-param-computed":true}},"RefType":"","Truncated":false,"Input":false,"Format":"","Scope":"","BaseName":""},"Comments":null,"Annotations":[{"FieldName":"user_ids","Ignore":false}]}],"Scope":"shared","Examples":[],"RefType":"Schemas","Comments":null},"AssociatedTypes":[],"Scope":"","Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"Name":"","Fields":[],"BaseName":"","RefType":"","Examples":[]},"Comments":null},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"assignees"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"assignees","Type":{"Scope":"","BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","Type":"array","ItemType":{"Comments":null,"Input":false,"Format":"","Name":"","Enum":null,"AssociatedTypes":[],"Discriminator":null,"ItemType":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"AdditionalProperties":null,"BaseName":"","RefType":"","Truncated":false,"Output":false,"Examples":[],"Type":"string","Scope":""},"Enum":null,"RefType":"","Comments":null,"AssociatedTypes":[],"Truncated":false,"Discriminator":null,"Name":"","Fields":[],"Output":false,"AdditionalProperties":null}},{"Type":{"BaseName":"","Examples":[],"Name":"","Type":"array","ItemType":{"Enum":null,"Comments":null,"AdditionalProperties":null,"Type":"class","Fields":[{"Annotations":[{"Ignore":false,"FieldName":"comparison"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"comparison","Type":{"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Input":false,"Output":false,"Name":"Comparison","AssociatedTypes":[],"Scope":"shared","BaseName":"","RefType":"Schemas","ItemType":null,"Truncated":false,"Format":"","Discriminator":null,"Type":"enum","Fields":[],"Enum":{"Names":[],"Type":{"Type":"string","AssociatedTypes":[],"RefType":"","Discriminator":null,"Truncated":false,"Output":false,"Extensions":{},"AdditionalProperties":null,"Name":"","Enum":null,"Comments":null,"Examples":[],"ItemType":null,"Fields":[],"Scope":"","BaseName":"","Input":false,"Format":""},"Values":["equals","any_of","not_empty","is_empty"]},"Examples":[]},"Comments":null},{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"schema"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"schema","Type":{"Scope":"","BaseName":"","Truncated":false,"Input":false,"Examples":[],"Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Format":"","Name":"","Fields":[],"Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Type":"string"}},{"Name":"source","Type":{"Output":false,"Examples":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"RefType":"","Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Format":"","Discriminator":null,"Name":"","Type":"string","BaseName":"","AdditionalProperties":null,"ItemType":null,"Fields":[],"Enum":null,"Comments":null,"Input":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"source"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"value","Type":{"Type":"union","Fields":[],"Enum":null,"Scope":"shared","Input":false,"Examples":[],"Format":"","ItemType":null,"Truncated":false,"Discriminator":null,"AssociatedTypes":[{"Examples":[],"Type":"string","Enum":null,"Comments":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Input":false,"Output":false,"Format":"","Discriminator":null,"Name":"","AssociatedTypes":[],"Truncated":false,"RefType":"","AdditionalProperties":null,"ItemType":null,"Scope":"","BaseName":""},{"RefType":"","Extensions":{"x-untouched":true},"Examples":[],"Name":"","Truncated":false,"AdditionalProperties":null,"Format":"","ItemType":null,"Fields":[],"Scope":"","Comments":null,"Output":false,"Discriminator":null,"Type":"number","AssociatedTypes":[],"Enum":null,"BaseName":"","Input":false},{"Discriminator":null,"Output":false,"Format":"","Enum":null,"Truncated":false,"Type":"array","AssociatedTypes":[],"AdditionalProperties":null,"ItemType":{"BaseName":"","Comments":null,"Input":false,"Examples":[],"AdditionalProperties":null,"Enum":null,"AssociatedTypes":[],"Output":false,"Format":"","Type":"string","ItemType":null,"Truncated":false,"Name":"","Scope":"","RefType":"","Extensions":{"x-untouched":true,"Symbol":"LinkbackRelationTags"},"Discriminator":null,"Fields":[]},"Comments":null,"Scope":"","BaseName":"","RefType":"","Input":false,"Extensions":{"x-untouched":true},"Examples":[],"Name":"","Fields":[]},{"Scope":"","Comments":null,"Examples":[],"AdditionalProperties":null,"Name":"","Type":"array","Extensions":{"x-untouched":true},"Format":"","Discriminator":null,"ItemType":{"Fields":[],"Enum":null,"Extensions":{"x-untouched":true,"Symbol":"UserIds"},"ItemType":null,"Scope":"","RefType":"","Truncated":false,"Input":false,"AdditionalProperties":null,"Discriminator":null,"Type":"number","Format":"","Name":"","AssociatedTypes":[],"BaseName":"","Comments":null,"Output":false,"Examples":[]},"Truncated":false,"Output":false,"Fields":[],"AssociatedTypes":[],"RefType":"","Input":false,"Enum":null,"BaseName":""}],"BaseName":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"TriggerWorkflowConditionValue"},"Name":"TriggerWorkflowCondition_value","RefType":"","Output":false,"AdditionalProperties":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"RefType":"Schemas","Input":false,"Output":false,"Examples":[],"Scope":"shared","BaseName":"","Extensions":{"Symbol":"TriggerWorkflowCondition","x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Name":"TriggerWorkflowCondition","Truncated":false},"Format":"","AdditionalProperties":null,"Discriminator":null,"Scope":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Enum":null,"Input":false,"Output":false,"Comments":null,"Fields":[],"AssociatedTypes":[],"RefType":""},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"conditions"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"conditions"},{"Annotations":[{"Ignore":false,"FieldName":"target_workflow"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"target_workflow","Type":{"Input":false,"Examples":[],"Name":"","Fields":[],"AssociatedTypes":[],"Truncated":false,"Discriminator":null,"ItemType":null,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Scope":"","RefType":"","AdditionalProperties":null,"Type":"string","Enum":null,"BaseName":"","Output":false},"Comments":null}],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"TriggerWorkflowConfig"},"Examples":[],"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"Comments":null,"Discriminator":null,"Scope":"shared","Truncated":false,"Output":false,"Format":"","Type":"class","ItemType":null,"BaseName":"","RefType":"Schemas","Input":false}},{"Name":"created_automatically","Type":{"Scope":"","AdditionalProperties":null,"Discriminator":null,"Enum":null,"Format":"","Type":"boolean","Fields":[],"AssociatedTypes":[],"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","ItemType":null,"BaseName":"","RefType":"","Truncated":false,"Input":false,"Output":false,"Examples":[]},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Flag indicating whether the action was created automatically or manually"},"Annotations":[{"Ignore":false,"FieldName":"created_automatically"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"flow_action_id","Type":{"Output":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Format":"","AdditionalProperties":null,"BaseName":"","RefType":"","Truncated":false,"Input":false,"ItemType":null,"Enum":null,"Discriminator":null,"Scope":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","Type":"string","Fields":[],"AssociatedTypes":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"flow_action_id"}],"Optional":true,"SerializationMethod":null},{"Comments":null,"Annotations":[{"FieldName":"id","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"ItemType":null,"Fields":[],"Enum":null,"BaseName":"","Input":false,"Scope":"","Output":false,"Examples":["9ec3711b-db63-449c-b894-54d5bb622a8f"],"Format":"","AdditionalProperties":null,"Name":"","Comments":null,"Discriminator":null,"Type":"string","AssociatedTypes":[],"RefType":"","Truncated":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true}}},{"ErrorMessage":false,"Name":"name","Type":{"Examples":[],"Discriminator":null,"Type":"string","AssociatedTypes":[],"Scope":"","Comments":null,"Name":"","BaseName":"","Format":"","ItemType":null,"RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Fields":[],"Enum":null,"Input":false,"Output":false},"Comments":null,"Annotations":[{"FieldName":"name","Ignore":false}],"Optional":true,"SerializationMethod":null},{"Type":{"Truncated":false,"Name":"TriggerWorkflowActionConfig_type","ItemType":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Comments":null,"Format":"","Discriminator":null,"Type":"enum","Fields":[],"Scope":"shared","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Enum":{"Names":[],"Type":{"Fields":[],"Comments":null,"Output":false,"Name":"","Type":"string","Discriminator":null,"ItemType":null,"Extensions":{},"Input":false,"Examples":[],"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Truncated":false,"Scope":"","BaseName":""},"Values":["trigger-workflow"]},"Output":false,"AdditionalProperties":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type"}],"Enum":null,"Output":false,"Format":"","Type":"class"}],"Scope":"shared"},"Comments":null,"Format":"","Name":"","BaseName":"","RefType":"","AdditionalProperties":null,"Discriminator":null,"Type":"array","Fields":[],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Input":false,"Output":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"actions"}],"Optional":false},{"Annotations":[{"Ignore":false,"FieldName":"created_at"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"created_at","Type":{"AssociatedTypes":[],"BaseName":"","Comments":null,"Input":false,"Examples":[],"Name":"","Format":"","AdditionalProperties":null,"Scope":"","Enum":null,"Truncated":false,"Type":"date-time","Fields":[],"RefType":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-param-computed":true},"Discriminator":null,"ItemType":null},"Comments":null},{"Comments":{"DeprecationMessage":"","Summary":"","Description":"User / service who created automation flow","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"created_by"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"created_by","Type":{"Name":"","RefType":"","Output":false,"Format":"","Scope":"","Discriminator":null,"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-param-computed":true},"Examples":["user:123"],"Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"AdditionalProperties":null,"Enum":null,"Truncated":false,"Comments":null,"Input":false}},{"Name":"enabled","Type":{"ItemType":null,"Comments":null,"AssociatedTypes":[],"BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Type":"boolean","Input":false,"Examples":[],"Discriminator":null,"Output":false,"Format":"","AdditionalProperties":null,"Name":"","Fields":[],"Enum":null,"Scope":"","RefType":""},"Comments":{"Summary":"","Description":"Whether the automation is enabled or not","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"enabled"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"entity_schema","Type":{"Comments":null,"Output":false,"Scope":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"BaseName":"","RefType":"","Examples":["submission"],"Name":"","ItemType":null,"Enum":null,"Format":"","Discriminator":null,"Type":"string"},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The triggering entity schema"},"Annotations":[{"Ignore":false,"FieldName":"entity_schema"}],"Optional":true},{"Annotations":[{"Ignore":false,"FieldName":"flow_name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"flow_name","Type":{"Enum":null,"Format":"","Discriminator":null,"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":["Handle contact form"],"Name":"","ItemType":null,"AssociatedTypes":[],"Comments":null,"Input":false,"Output":false,"AdditionalProperties":null,"Type":"string","RefType":"","Truncated":false,"Fields":[],"BaseName":""},"Comments":{"Summary":"","Description":"A descriptive name for the Automation","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"Format":"","Enum":null,"Scope":"","BaseName":"","Comments":null,"Output":false,"Examples":["7791b04a-16d2-44a2-9af9-2d59c25c512f"],"ItemType":null,"RefType":"","Truncated":false,"Input":false,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Name":"","Type":"string","AssociatedTypes":[],"Discriminator":null},"Comments":null},{"ErrorMessage":false,"Name":"last_updated_by","Type":{"Name":"","Scope":"","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-param-computed":true},"Type":"string","AssociatedTypes":[],"Enum":null,"Examples":["user:123"],"AdditionalProperties":null,"Fields":[],"BaseName":"","RefType":"","Truncated":false,"Format":"","Discriminator":null,"ItemType":null,"Output":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"User / service who last updated automation flow","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"last_updated_by"}],"Optional":true,"SerializationMethod":null},{"ErrorMessage":false,"Name":"org_id","Type":{"AdditionalProperties":null,"Scope":"","RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-param-computed":true},"Examples":["123"],"ItemType":null,"Fields":[],"Input":false,"Output":false,"Format":"","Type":"string","AssociatedTypes":[],"BaseName":"","Truncated":false,"Comments":null,"Discriminator":null,"Name":"","Enum":null},"Comments":{"Summary":"","Description":"Organization the automation flow belongs to","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"org_id"}],"Optional":true,"SerializationMethod":null},{"SerializationMethod":null,"ErrorMessage":false,"Name":"runs","Type":{"Examples":[7],"AdditionalProperties":null,"Type":"number","AssociatedTypes":[],"Enum":null,"Scope":"","Comments":null,"Output":false,"ItemType":null,"Fields":[],"BaseName":"","RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Discriminator":null,"Name":"","Truncated":false,"Format":"","Input":false},"Comments":{"Description":"Number of automation executions that ran","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"runs"}],"Optional":true},{"Name":"trigger_conditions","Type":{"ItemType":{"Enum":null,"Comments":null,"Name":"TriggerCondition","Type":"class","Scope":"shared","Output":false,"AdditionalProperties":null,"Discriminator":null,"Fields":[{"Type":{"ItemType":null,"Enum":{"Type":{"Comments":null,"Output":false,"Name":"","Type":"string","AssociatedTypes":[],"Format":"","ItemType":null,"Fields":[],"RefType":"","Examples":[],"AdditionalProperties":null,"Discriminator":null,"Scope":"","BaseName":"","Input":false,"Extensions":{},"Enum":null,"Truncated":false},"Values":["equals","any_of","not_empty","is_empty"],"Names":[]},"Truncated":false,"AdditionalProperties":null,"Discriminator":null,"Name":"Comparison","AssociatedTypes":[],"Scope":"shared","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Type":"enum","Fields":[],"BaseName":"","Output":false,"Examples":[],"Format":"","RefType":"Schemas"},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"comparison"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"comparison"},{"Type":{"BaseName":"","Name":"","AssociatedTypes":[],"Enum":null,"Scope":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","Discriminator":null,"Type":"string","ItemType":null,"Truncated":false,"Comments":null,"Fields":[],"RefType":"","Input":false,"AdditionalProperties":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"source"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"source"},{"Name":"value","Type":{"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"TriggerWorkflowConditionValue"},"Format":"","AdditionalProperties":null,"Name":"TriggerCondition_value","ItemType":null,"AssociatedTypes":[{"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Truncated":false,"Scope":"","RefType":"","Comments":null,"Examples":[],"Discriminator":null,"ItemType":null,"Fields":[],"BaseName":"","Name":"","AssociatedTypes":[],"Enum":null,"Input":false,"AdditionalProperties":null,"Type":"string"},{"Truncated":false,"Fields":[],"AssociatedTypes":[],"BaseName":"","RefType":"","Comments":null,"Input":false,"Format":"","ItemType":null,"Scope":"","Output":false,"Examples":[],"Name":"","Type":"number","Enum":null,"Extensions":{"x-untouched":true},"AdditionalProperties":null,"Discriminator":null},{"Name":"","Type":"array","Fields":[],"Format":"","Input":false,"Extensions":{"x-untouched":true},"AdditionalProperties":null,"ItemType":{"BaseName":"","Examples":[],"Discriminator":null,"Type":"string","Scope":"","AdditionalProperties":null,"ItemType":null,"Fields":[],"Enum":null,"Truncated":false,"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"Symbol":"LinkbackRelationTags"},"Name":"","AssociatedTypes":[],"RefType":"","Output":false,"Format":""},"Enum":null,"Scope":"","RefType":"","Comments":null,"Discriminator":null,"BaseName":"","Output":false,"AssociatedTypes":[],"Truncated":false,"Examples":[]},{"Examples":[],"Name":"","AssociatedTypes":[],"Enum":null,"Scope":"","Truncated":false,"Comments":null,"Output":false,"Discriminator":null,"ItemType":{"Type":"number","BaseName":"","RefType":"","Extensions":{"x-untouched":true,"Symbol":"UserIds"},"AdditionalProperties":null,"Input":false,"Output":false,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Truncated":false,"Comments":null,"Examples":[],"ItemType":null,"Scope":"","Discriminator":null,"Format":""},"BaseName":"","RefType":"","Format":"","AdditionalProperties":null,"Type":"array","Fields":[],"Input":false,"Extensions":{"x-untouched":true}}],"Type":"union","Discriminator":null,"Fields":[],"Enum":null,"Scope":"shared","Comments":null,"Input":false,"Examples":[],"BaseName":"","RefType":"","Truncated":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"AssociatedTypes":[],"Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"TriggerCondition"},"ItemType":null,"BaseName":"","RefType":"Schemas","Examples":[],"Format":""},"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"AdditionalProperties":null,"Fields":[],"Scope":"","BaseName":"","RefType":"","Input":false,"Type":"array","Output":false,"Format":"","Discriminator":null,"Name":"","AssociatedTypes":[],"Enum":null,"Truncated":false,"Comments":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"trigger_conditions"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"triggers","Type":{"Truncated":false,"Fields":[],"Enum":null,"Scope":"","RefType":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Name":"","Type":"array","ItemType":{"Name":"AnyTrigger","Type":"union","Comments":null,"Output":false,"Format":"","Fields":[],"Enum":null,"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"AnyTrigger"},"Discriminator":null,"AssociatedTypes":[{"Truncated":false,"Comments":null,"Fields":[{"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"configuration"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"configuration","Type":{"Fields":[{"Name":"schema","Type":{"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Type":"string","Fields":[],"BaseName":"","ItemType":null,"Enum":null,"Format":"","Discriminator":null,"Name":"","AssociatedTypes":[],"Truncated":false,"Output":false,"Examples":["submission"],"Scope":"","RefType":"","Comments":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"schema"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"Type":"array","Name":"","ItemType":{"Type":"enum","Fields":[],"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":{"Type":{"Type":"string","RefType":"","Truncated":false,"Input":false,"Examples":[],"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","Output":false,"Extensions":{},"Discriminator":null,"Name":"","ItemType":null,"BaseName":"","Comments":null,"Format":""},"Values":["CreateMeterReading","UpdateMeterReading","MessageActivity","SyncActivity"],"Names":[]},"Truncated":false,"Examples":[],"Format":"","Name":"ActivityTrigger_configuration_types","ItemType":null,"BaseName":"","Input":false,"Output":false,"Scope":"shared","RefType":"","Comments":null,"Extensions":{"x-speakeasy-param-computed":true,"Symbol":"ActivityTriggerConfigurationTypes","x-untouched":true}},"Scope":"","RefType":"","Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"BaseName":"","Comments":null,"Input":false},"Comments":null,"Annotations":[{"FieldName":"types","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"types"}],"Scope":"shared","Comments":null,"Input":false,"Discriminator":null,"Name":"ActivityTrigger_configuration","Type":"class","Enum":null,"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"ActivityTriggerConfiguration"},"Format":"","ItemType":null,"AssociatedTypes":[],"Truncated":false,"Examples":[],"AdditionalProperties":null,"BaseName":"","Output":false}},{"ErrorMessage":false,"Name":"type","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"Scope":"shared","BaseName":"","Truncated":false,"Input":false,"Output":false,"Name":"ActivityTrigger_type","AssociatedTypes":[],"Enum":{"Type":{"Discriminator":null,"Fields":[],"AssociatedTypes":[],"AdditionalProperties":null,"Output":false,"Examples":[],"Enum":null,"BaseName":"","Truncated":false,"RefType":"","Extensions":{},"Scope":"","Comments":null,"Input":false,"Format":"","Name":"","Type":"string","ItemType":null},"Values":["activity"],"Names":[]},"RefType":"","Comments":null,"Discriminator":null,"Type":"enum","Format":"","AdditionalProperties":null,"ItemType":null,"Examples":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null}],"BaseName":"","RefType":"Schemas","Input":false,"AdditionalProperties":null,"Name":"ActivityTrigger","Type":"class","AssociatedTypes":[],"Discriminator":null,"Enum":null,"Scope":"shared","Examples":[],"Format":"","ItemType":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"ActivityTrigger"}},{"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"APISubmissionTrigger"},"Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"configuration","Type":{"Examples":[],"Name":"ApiSubmissionTrigger_configuration","AssociatedTypes":[],"RefType":"","Truncated":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"APISubmissionTriggerConfiguration"},"AdditionalProperties":null,"Type":"class","ItemType":null,"Enum":null,"Format":"","Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"source_id","Type":{"Name":"","Fields":[],"Output":false,"Type":"string","AssociatedTypes":[],"Enum":null,"RefType":"","Examples":[],"Format":"","Discriminator":null,"ItemType":null,"BaseName":"","Comments":null,"Scope":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null},"Comments":null,"Annotations":[{"FieldName":"source_id","Ignore":false}],"Optional":true}],"Scope":"shared","Input":false,"BaseName":"","Output":false,"Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"configuration"}]},{"Name":"type","Type":{"Scope":"shared","Format":"","Discriminator":null,"Comments":null,"Examples":[],"Name":"ApiSubmissionTrigger_type","Type":"enum","Fields":[],"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"BaseName":"","RefType":"","Truncated":false,"AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Enum":{"Type":{"Type":"string","Enum":null,"Comments":null,"Name":"","Examples":[],"AdditionalProperties":null,"ItemType":null,"Extensions":{},"Truncated":false,"AssociatedTypes":[],"Scope":"","BaseName":"","RefType":"","Input":false,"Output":false,"Format":"","Fields":[],"Discriminator":null},"Values":["api_submission"],"Names":[]}},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"Comments":null,"Enum":null,"BaseName":"","Truncated":false,"Output":false,"Examples":[],"Type":"class","AssociatedTypes":[],"Scope":"shared","AdditionalProperties":null,"Discriminator":null,"Name":"ApiSubmissionTrigger","ItemType":null,"RefType":"Schemas","Format":""},{"Format":"","AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"EntityManualTrigger"},"Examples":[],"Discriminator":null,"Scope":"shared","Truncated":false,"Input":false,"Output":false,"RefType":"Schemas","Comments":null,"BaseName":"","Name":"EntityManualTrigger","Type":"class","Fields":[{"Name":"configuration","Type":{"Scope":"shared","BaseName":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"EntityManualTriggerConfiguration"},"Output":false,"Format":"","Discriminator":null,"Name":"EntityManualTrigger_configuration","Fields":[{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"schema","Type":{"Name":"","Examples":["submission"],"AdditionalProperties":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AssociatedTypes":[],"Enum":null,"Scope":"","BaseName":"","Comments":null,"Input":false,"ItemType":null,"RefType":"","Format":"","Discriminator":null,"Type":"string","Fields":[],"Truncated":false,"Output":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Which entity type can this automation be triggered from","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"schema"}]}],"AssociatedTypes":[],"Enum":null,"RefType":"","Comments":null,"Examples":[],"Type":"class","ItemType":null,"AdditionalProperties":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"configuration"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"Discriminator":null,"AssociatedTypes":[],"Enum":{"Type":{"Scope":"","Examples":[],"Name":"","AssociatedTypes":[],"Enum":null,"BaseName":"","Comments":null,"Format":"","ItemType":null,"Fields":[],"Truncated":false,"Discriminator":null,"Input":false,"Output":false,"Extensions":{},"AdditionalProperties":null,"Type":"string","RefType":""},"Values":["entity_manual"],"Names":[]},"Truncated":false,"Comments":null,"ItemType":null,"Scope":"shared","Format":"","AdditionalProperties":null,"Name":"EntityManualTrigger_type","Fields":[],"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Type":"enum","BaseName":"","RefType":"","Input":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type"}],"Enum":null},{"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"EntityOperationTrigger"},"Examples":[],"Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Truncated":false,"Comments":null,"Type":"class","Scope":"shared","Output":false,"RefType":"Schemas","Input":false,"Format":"","AdditionalProperties":null,"Name":"EntityOperationTrigger","Fields":[{"Name":"configuration","Type":{"Scope":"shared","BaseName":"","Comments":null,"Output":false,"AdditionalProperties":null,"AssociatedTypes":[],"Type":"class","ItemType":null,"Enum":null,"RefType":"","Truncated":false,"Input":false,"Examples":[],"Name":"EntityOperationTrigger_configuration","Format":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"EntityOperationTriggerConfiguration"},"Discriminator":null,"Fields":[{"Name":"exclude_activities","Type":{"Type":"array","Scope":"","Format":"","Name":"","Fields":[],"Truncated":false,"Output":false,"AdditionalProperties":null,"Discriminator":null,"ItemType":{"Fields":[],"Scope":"","Input":false,"Output":false,"Format":"","ItemType":null,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Examples":[["SyncEntity"]],"Name":"","Type":"string","Comments":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","AdditionalProperties":null,"Discriminator":null},"BaseName":"","Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"Examples":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Comments":null,"Input":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"exclude_activities"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"include_activities"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"include_activities","Type":{"Truncated":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Type":"array","Fields":[],"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Input":false,"Examples":[],"Format":"","Discriminator":null,"Name":"","ItemType":{"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"LinkbackRelationTags"},"Examples":[["CreateEntity"]],"AssociatedTypes":[],"Type":"string","ItemType":null,"Enum":null,"Scope":"","RefType":"","Input":false,"Format":"","Name":"","Truncated":false,"Comments":null,"Output":false,"AdditionalProperties":null,"Discriminator":null,"Fields":[]},"Scope":"","Output":false,"AdditionalProperties":null},"Comments":null},{"ErrorMessage":false,"Name":"operations","Type":{"ItemType":{"Truncated":false,"Format":"","Name":"EntityOperationTrigger_configuration_operations","Type":"enum","ItemType":null,"AssociatedTypes":[],"Enum":{"Type":{"Name":"","Type":"string","Extensions":{},"AssociatedTypes":[],"Scope":"","Comments":null,"Examples":[],"Truncated":false,"Output":false,"Format":"","Discriminator":null,"AdditionalProperties":null,"ItemType":null,"Fields":[],"Enum":null,"BaseName":"","RefType":"","Input":false},"Values":["createEntity","updateEntity","deleteEntity"],"Names":[]},"Comments":null,"Input":false,"Fields":[],"RefType":"","Output":false,"Scope":"shared","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"EntityOperationTriggerConfigurationOperations"},"Examples":[],"AdditionalProperties":null,"Discriminator":null},"Fields":[],"BaseName":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Scope":"","Examples":[],"Format":"","AdditionalProperties":null,"Name":"","Type":"array","AssociatedTypes":[],"RefType":"","Truncated":false,"Discriminator":null,"Enum":null,"Input":false,"Output":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"operations"}],"Optional":false,"SerializationMethod":null},{"ErrorMessage":false,"Name":"schema","Type":{"AdditionalProperties":null,"BaseName":"","RefType":"","Input":false,"Name":"","Examples":["submission"],"Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Format":"","Discriminator":null,"Fields":[],"AssociatedTypes":[],"Truncated":false,"Scope":"","Type":"string","ItemType":null,"Enum":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"schema"}],"Optional":false,"SerializationMethod":null}]},"Comments":null,"Annotations":[{"FieldName":"configuration","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Examples":[],"Output":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true},"BaseName":"","Discriminator":null,"Enum":{"Type":{"ItemType":null,"Fields":[],"Enum":null,"Input":false,"Examples":[],"Format":"","Name":"","AssociatedTypes":[],"BaseName":"","Truncated":false,"Extensions":{},"Type":"string","Scope":"","RefType":"","Comments":null,"Output":false,"Discriminator":null,"AdditionalProperties":null},"Values":["entity_operation"],"Names":[]},"Scope":"shared","Truncated":false,"Comments":null,"Input":false,"AdditionalProperties":null,"Name":"EntityOperationTrigger_type","Type":"enum","AssociatedTypes":[],"RefType":"","Format":"","ItemType":null,"Fields":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false}],"Enum":null,"BaseName":""},{"AssociatedTypes":[],"Scope":"shared","Truncated":false,"Output":false,"Format":"","Name":"FrontendSubmitTrigger","ItemType":null,"Enum":null,"Comments":null,"AdditionalProperties":null,"Type":"class","BaseName":"","RefType":"Schemas","Input":false,"Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"configuration","Type":{"Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"Name":"FrontendSubmitTrigger_configuration","AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Input":false,"Examples":[],"ItemType":null,"Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"source_id","Type":{"Discriminator":null,"Fields":[],"BaseName":"","Output":false,"Format":"","ItemType":null,"Truncated":false,"Input":false,"RefType":"","Comments":null,"Examples":["99"],"Name":"","Type":"string","AssociatedTypes":[],"AdditionalProperties":null,"Enum":null,"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true}},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"source_id"}],"Optional":true}],"Scope":"shared","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"APISubmissionTriggerConfiguration"},"Type":"class","Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"configuration"}]},{"Type":{"Type":"enum","BaseName":"","Input":false,"Examples":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Name":"FrontendSubmitTrigger_type","RefType":"","Truncated":false,"Comments":null,"Fields":[],"AssociatedTypes":[],"Format":"","Discriminator":null,"ItemType":null,"Enum":{"Type":{"Examples":[],"Format":"","Scope":"","BaseName":"","Truncated":false,"Input":false,"Comments":null,"Extensions":{},"AdditionalProperties":null,"Type":"string","Enum":null,"RefType":"","Output":false,"Discriminator":null,"Name":"","ItemType":null,"Fields":[],"AssociatedTypes":[]},"Values":["frontend_submission"],"Names":[]},"Scope":"shared","Output":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type"}],"Extensions":{"Symbol":"FrontendSubmitTrigger","x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Discriminator":null},{"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"JourneySubmitTrigger"},"Examples":[],"Scope":"shared","RefType":"Schemas","BaseName":"","Input":false,"Discriminator":null,"Fields":[{"Name":"configuration","Type":{"Format":"","Discriminator":null,"Fields":[{"Name":"source_id","Type":{"Format":"uuid","AssociatedTypes":[],"Truncated":false,"Comments":null,"RefType":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Name":"","ItemType":null,"Enum":null,"Discriminator":null,"Type":"string","Scope":"","AdditionalProperties":null,"Examples":[],"Fields":[],"BaseName":"","Input":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"source_id"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"AssociatedTypes":[],"Examples":[],"RefType":"","Truncated":false,"Extensions":{"Symbol":"APISubmissionTriggerConfiguration","x-untouched":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Name":"JourneySubmitTrigger_configuration","ItemType":null,"Scope":"shared","BaseName":"","Comments":null,"Input":false,"Type":"class","Enum":null,"Output":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"configuration"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"FieldName":"type","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"AssociatedTypes":[],"Enum":{"Type":{"BaseName":"","Comments":null,"Input":false,"Format":"","Name":"","Enum":null,"Scope":"","Extensions":{},"Fields":[],"ItemType":null,"AssociatedTypes":[],"RefType":"","Truncated":false,"Output":false,"Examples":[],"AdditionalProperties":null,"Type":"string","Discriminator":null},"Values":["journey_submission"],"Names":[]},"Scope":"shared","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"Format":"","Discriminator":null,"Name":"JourneySubmitTrigger_type","Type":"enum","ItemType":null,"BaseName":"","RefType":"","Comments":null,"Input":false,"Output":false,"Examples":[],"AdditionalProperties":null},"Comments":null}],"AssociatedTypes":[],"Enum":null,"Truncated":false,"AdditionalProperties":null,"Type":"class","ItemType":null,"Format":"","Name":"JourneySubmitTrigger","Output":false},{"Truncated":false,"Input":false,"Format":"","Discriminator":null,"Name":"ReceivedEmailTrigger","Fields":[{"ErrorMessage":false,"Name":"configuration","Type":{"Type":"class","Fields":[{"Name":"message_type","Type":{"Discriminator":null,"Type":"enum","ItemType":null,"AssociatedTypes":[],"Enum":{"Type":{"BaseName":"","Output":false,"Format":"","Name":"","Type":"string","Fields":[],"Comments":null,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"Truncated":false,"Input":false,"Scope":"","RefType":"","Examples":[]},"Values":["RECEIVED"],"Names":[]},"BaseName":"","Fields":[],"Truncated":false,"Format":"","AdditionalProperties":null,"Scope":"shared","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"Name":"ReceivedEmailTrigger_configuration_message_type","RefType":"","Output":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"message_type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Input":false,"Name":"ReceivedEmailTrigger_configuration","ItemType":null,"Enum":null,"Scope":"shared","Extensions":{"Symbol":"ReceivedEmailTriggerConfiguration","x-untouched":true,"x-speakeasy-param-computed":true},"Examples":[],"BaseName":"","RefType":"","Truncated":false,"AdditionalProperties":null,"AssociatedTypes":[],"Comments":null,"Output":false,"Format":"","Discriminator":null},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"configuration"}],"Optional":false,"SerializationMethod":null},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true},"Fields":[],"AssociatedTypes":[],"RefType":"","Format":"","Enum":{"Type":{"Output":false,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"Comments":null,"BaseName":"","Truncated":false,"ItemType":null,"AssociatedTypes":[],"Enum":null,"Examples":[],"Type":"string","Fields":[],"Scope":"","RefType":"","Input":false,"Format":"","Name":""},"Values":["received_email"],"Names":[]},"BaseName":"","Comments":null,"Discriminator":null,"Type":"enum","ItemType":null,"AdditionalProperties":null,"Input":false,"Examples":[],"Name":"ReceivedEmailTrigger_type","Scope":"shared","Truncated":false},"Comments":null,"Annotations":[{"FieldName":"type","Ignore":false}]}],"Scope":"shared","BaseName":"","Output":false,"Examples":[],"AdditionalProperties":null,"Type":"class","RefType":"Schemas","Comments":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-computed":true,"Symbol":"ReceivedEmailTrigger"}}],"BaseName":"","AdditionalProperties":null,"ItemType":null,"Scope":"shared","Truncated":false,"Input":false,"Examples":[]},"BaseName":"","Input":false,"Discriminator":null,"AdditionalProperties":null,"AssociatedTypes":[],"Output":false,"Examples":[]},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"triggers"}],"Optional":false,"SerializationMethod":null},{"ErrorMessage":false,"Name":"updated_at","Type":{"Fields":[],"AssociatedTypes":[],"Enum":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-param-computed":true},"AdditionalProperties":null,"Name":"","Type":"date-time","ItemType":null,"Truncated":false,"Comments":null,"Input":false,"Examples":[],"Discriminator":null,"Scope":"","BaseName":"","RefType":"","Format":""},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"updated_at"}],"Optional":true,"SerializationMethod":null}]})

			"actions": schema.ListNestedAttribute{
				Required: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"automation_action_config": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"allow_failure": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Whether to stop execution in a failed state if this action fails`,
								},
								"config": schema.MapAttribute{
									Computed:    true,
									Optional:    true,
									ElementType: types.StringType,
									Validators: []validator.Map{
										mapvalidator.ValueStringsAre(validators.IsValidJSON()),
									},
								},
								"created_automatically": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Flag indicating whether the action was created automatically or manually`,
								},
								"flow_action_id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"type": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
							},
						},
						"cart_checkout_action_config": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"allow_failure": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Whether to stop execution in a failed state if this action fails`,
								},
								"config": schema.SingleNestedAttribute{
									Computed: true,
									Optional: true,
									Attributes: map[string]schema.Attribute{
										"linkback_relation_attribute": schema.StringAttribute{
											Computed: true,
											Optional: true,
											MarkdownDescription: `Relation attribute on the main entity where the target entity will be linked. Set to false to disable linkback` + "\n" +
												``,
										},
										"linkback_relation_tags": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
											Description: `Relation tags (labels) to include in main entity linkback relation attribute`,
										},
										"mapping_attributes": schema.ListNestedAttribute{
											Computed: true,
											Optional: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"mapping_attribute": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"append_value_mapper": schema.SingleNestedAttribute{
																Computed: true,
																Optional: true,
																Attributes: map[string]schema.Attribute{
																	"mode": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			stringvalidator.OneOf(
																				"copy_if_exists",
																				"append_if_exists",
																				"set_value",
																			),
																		},
																		MarkdownDescription: `must be one of ["copy_if_exists", "append_if_exists", "set_value"]` + "\n" +
																			`- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.` + "\n" +
																			``,
																	},
																	"source": schema.StringAttribute{
																		Computed: true,
																		Optional: true,
																		MarkdownDescription: `JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price` + "\n" +
																			``,
																	},
																	"target": schema.StringAttribute{
																		Required:    true,
																		Description: `JSON like target path for the attribute. Eg. last_name`,
																	},
																	"target_unique": schema.ListAttribute{
																		Computed:    true,
																		Optional:    true,
																		ElementType: types.StringType,
																		MarkdownDescription: `Array of keys which should be used when checking for uniqueness. Eg: [country, city, postal_code]` + "\n" +
																			``,
																	},
																	"value_json": schema.StringAttribute{
																		Required: true,
																		MarkdownDescription: `To be provided only when mapping json objects into a target attribute. Eg array of addresses.` + "\n" +
																			``,
																	},
																},
															},
															"copy_value_mapper": schema.SingleNestedAttribute{
																Computed: true,
																Optional: true,
																Attributes: map[string]schema.Attribute{
																	"mode": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			stringvalidator.OneOf(
																				"copy_if_exists",
																				"append_if_exists",
																				"set_value",
																			),
																		},
																		MarkdownDescription: `must be one of ["copy_if_exists", "append_if_exists", "set_value"]` + "\n" +
																			`- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.` + "\n" +
																			``,
																	},
																	"source": schema.StringAttribute{
																		Required: true,
																		MarkdownDescription: `JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price` + "\n" +
																			``,
																	},
																	"target": schema.StringAttribute{
																		Required:    true,
																		Description: `JSON like target path for the attribute. Eg. last_name`,
																	},
																},
															},
															"set_value_mapper": schema.SingleNestedAttribute{
																Computed: true,
																Optional: true,
																Attributes: map[string]schema.Attribute{
																	"mode": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			stringvalidator.OneOf(
																				"copy_if_exists",
																				"append_if_exists",
																				"set_value",
																			),
																		},
																		MarkdownDescription: `must be one of ["copy_if_exists", "append_if_exists", "set_value"]` + "\n" +
																			`- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.` + "\n" +
																			``,
																	},
																	"target": schema.StringAttribute{
																		Required:    true,
																		Description: `JSON like target path for the attribute. Eg. last_name`,
																	},
																	"value": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			validators.IsValidJSON(),
																		},
																		MarkdownDescription: `Parsed as JSON.` + "\n" +
																			`Any value to be set: string, number, string[], number[], JSON object, etc. It will override existing values, if any.` + "\n" +
																			``,
																	},
																},
															},
														},
														Validators: []validator.Object{
															validators.ExactlyOneChild(),
														},
													},
													"mapping_attribute_v2": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"operation": schema.SingleNestedAttribute{
																Required: true,
																Attributes: map[string]schema.Attribute{
																	"any": schema.StringAttribute{
																		Computed: true,
																		Optional: true,
																		Validators: []validator.String{
																			validators.IsValidJSON(),
																		},
																		Description: `Parsed as JSON.`,
																	},
																	"operation_object_node": schema.SingleNestedAttribute{
																		Computed: true,
																		Optional: true,
																		Attributes: map[string]schema.Attribute{
																			"append": schema.ListAttribute{
																				Computed:    true,
																				Optional:    true,
																				ElementType: types.StringType,
																				Validators: []validator.List{
																					listvalidator.ValueStringsAre(validators.IsValidJSON()),
																				},
																				Description: `Append to array`,
																			},
																			"copy": schema.StringAttribute{
																				Computed:    true,
																				Optional:    true,
																				Description: `Copy JSONPath value from source entity context`,
																			},
																			"set": schema.StringAttribute{
																				Computed: true,
																				Optional: true,
																				Validators: []validator.String{
																					validators.IsValidJSON(),
																				},
																				Description: `Parsed as JSON.`,
																			},
																			"uniq": schema.SingleNestedAttribute{
																				Computed: true,
																				Optional: true,
																				Attributes: map[string]schema.Attribute{
																					"boolean": schema.BoolAttribute{
																						Computed: true,
																						Optional: true,
																					},
																					"array_ofstr": schema.ListAttribute{
																						Optional:    true,
																						ElementType: types.StringType,
																					},
																				},
																				Validators: []validator.Object{
																					validators.ExactlyOneChild(),
																				},
																				Description: `Unique array`,
																			},
																			"additional_properties": schema.StringAttribute{
																				Optional: true,
																				Validators: []validator.String{
																					validators.IsValidJSON(),
																				},
																				Description: `Parsed as JSON.`,
																			},
																		},
																		Description: `Mapping operation nodes are either primitive values or operation node objects`,
																	},
																},
																Validators: []validator.Object{
																	validators.ExactlyOneChild(),
																},
																Description: `Mapping operation nodes are either primitive values or operation node objects`,
															},
															"target": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Target JSON path for the attribute to set`,
															},
														},
													},
												},
												Validators: []validator.Object{
													validators.ExactlyOneChild(),
												},
											},
										},
										"mapping_config": schema.SingleNestedAttribute{
											Computed: true,
											Optional: true,
											Attributes: map[string]schema.Attribute{
												"config_id": schema.StringAttribute{
													Required:    true,
													Description: `Id of Entity Mapping Configuration to run for mapping.`,
												},
												"target_id": schema.StringAttribute{
													Required:    true,
													Description: `Id of TargetConfig to run for mapping.`,
												},
												"version": schema.NumberAttribute{
													Computed:    true,
													Optional:    true,
													Description: `Version of Entity Mapping Configuration to run for mapping.`,
												},
											},
										},
										"relation_attributes": schema.ListNestedAttribute{
											Computed: true,
											Optional: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"mode": schema.StringAttribute{
														Required: true,
														Validators: []validator.String{
															stringvalidator.OneOf(
																"append",
																"prepend",
																"set",
															),
														},
														Description: `must be one of ["append", "prepend", "set"]`,
													},
													"related_to": schema.MapAttribute{
														Computed:    true,
														Optional:    true,
														ElementType: types.StringType,
														Validators: []validator.Map{
															mapvalidator.ValueStringsAre(validators.IsValidJSON()),
														},
													},
													"source_filter": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"attribute": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by a specific relation attribute on the main entity`,
															},
															"limit": schema.Int64Attribute{
																Computed:    true,
																Optional:    true,
																Description: `Limit relations to maximum number (default, all matched relations)`,
															},
															"relation_tag": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by relation tag (label) on the main entity`,
															},
															"schema": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by specific schema`,
															},
															"self": schema.BoolAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Picks main entity as relation (overrides other filters)`,
															},
															"tag": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by a specific tag on the related entity`,
															},
														},
														Description: `A filter to identify which source entities to pick as relations from main entity`,
													},
													"target": schema.StringAttribute{
														Required:    true,
														Description: `Target attribute to store the relation in`,
													},
													"target_tags": schema.ListAttribute{
														Computed:    true,
														Optional:    true,
														ElementType: types.StringType,
														Description: `Relation tags (labels) to set for the stored relations`,
													},
													"target_tags_include_source": schema.BoolAttribute{
														Computed:    true,
														Optional:    true,
														Description: `Include all relation tags (labels) present on the main entity relation`,
													},
												},
											},
										},
										"target_unique": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
											Description: `Unique key for target entity (see upsertEntity of Entity API)`,
										},
										"version": schema.StringAttribute{
											Computed:    true,
											Optional:    true,
											Description: `Version of the config`,
										},
									},
								},
								"created_automatically": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Flag indicating whether the action was created automatically or manually`,
								},
								"flow_action_id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"type": schema.StringAttribute{
									Computed: true,
									Optional: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"cart-checkout",
										),
									},
									Description: `must be one of ["cart-checkout"]`,
								},
							},
							Description: `Creates an order entity with prices from journey`,
						},
						"create_document_action_config": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"allow_failure": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Whether to stop execution in a failed state if this action fails`,
								},
								"config": schema.SingleNestedAttribute{
									Computed: true,
									Optional: true,
									Attributes: map[string]schema.Attribute{
										"filename": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
										"template_id": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
									},
								},
								"created_automatically": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Flag indicating whether the action was created automatically or manually`,
								},
								"flow_action_id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"type": schema.StringAttribute{
									Computed: true,
									Optional: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"create-document",
										),
									},
									Description: `must be one of ["create-document"]`,
								},
							},
						},
						"map_entity_action_config": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"allow_failure": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Whether to stop execution in a failed state if this action fails`,
								},
								"config": schema.SingleNestedAttribute{
									Computed: true,
									Optional: true,
									Attributes: map[string]schema.Attribute{
										"linkback_relation_attribute": schema.StringAttribute{
											Computed: true,
											Optional: true,
											MarkdownDescription: `Relation attribute on the main entity where the target entity will be linked. Set to false to disable linkback` + "\n" +
												``,
										},
										"linkback_relation_tags": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
											Description: `Relation tags (labels) to include in main entity linkback relation attribute`,
										},
										"mapping_attributes": schema.ListNestedAttribute{
											Computed: true,
											Optional: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"mapping_attribute": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"append_value_mapper": schema.SingleNestedAttribute{
																Computed: true,
																Optional: true,
																Attributes: map[string]schema.Attribute{
																	"mode": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			stringvalidator.OneOf(
																				"copy_if_exists",
																				"append_if_exists",
																				"set_value",
																			),
																		},
																		MarkdownDescription: `must be one of ["copy_if_exists", "append_if_exists", "set_value"]` + "\n" +
																			`- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.` + "\n" +
																			``,
																	},
																	"source": schema.StringAttribute{
																		Computed: true,
																		Optional: true,
																		MarkdownDescription: `JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price` + "\n" +
																			``,
																	},
																	"target": schema.StringAttribute{
																		Required:    true,
																		Description: `JSON like target path for the attribute. Eg. last_name`,
																	},
																	"target_unique": schema.ListAttribute{
																		Computed:    true,
																		Optional:    true,
																		ElementType: types.StringType,
																		MarkdownDescription: `Array of keys which should be used when checking for uniqueness. Eg: [country, city, postal_code]` + "\n" +
																			``,
																	},
																	"value_json": schema.StringAttribute{
																		Required: true,
																		MarkdownDescription: `To be provided only when mapping json objects into a target attribute. Eg array of addresses.` + "\n" +
																			``,
																	},
																},
															},
															"copy_value_mapper": schema.SingleNestedAttribute{
																Computed: true,
																Optional: true,
																Attributes: map[string]schema.Attribute{
																	"mode": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			stringvalidator.OneOf(
																				"copy_if_exists",
																				"append_if_exists",
																				"set_value",
																			),
																		},
																		MarkdownDescription: `must be one of ["copy_if_exists", "append_if_exists", "set_value"]` + "\n" +
																			`- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.` + "\n" +
																			``,
																	},
																	"source": schema.StringAttribute{
																		Required: true,
																		MarkdownDescription: `JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price` + "\n" +
																			``,
																	},
																	"target": schema.StringAttribute{
																		Required:    true,
																		Description: `JSON like target path for the attribute. Eg. last_name`,
																	},
																},
															},
															"set_value_mapper": schema.SingleNestedAttribute{
																Computed: true,
																Optional: true,
																Attributes: map[string]schema.Attribute{
																	"mode": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			stringvalidator.OneOf(
																				"copy_if_exists",
																				"append_if_exists",
																				"set_value",
																			),
																		},
																		MarkdownDescription: `must be one of ["copy_if_exists", "append_if_exists", "set_value"]` + "\n" +
																			`- copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.` + "\n" +
																			``,
																	},
																	"target": schema.StringAttribute{
																		Required:    true,
																		Description: `JSON like target path for the attribute. Eg. last_name`,
																	},
																	"value": schema.StringAttribute{
																		Required: true,
																		Validators: []validator.String{
																			validators.IsValidJSON(),
																		},
																		MarkdownDescription: `Parsed as JSON.` + "\n" +
																			`Any value to be set: string, number, string[], number[], JSON object, etc. It will override existing values, if any.` + "\n" +
																			``,
																	},
																},
															},
														},
														Validators: []validator.Object{
															validators.ExactlyOneChild(),
														},
													},
													"mapping_attribute_v2": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"operation": schema.SingleNestedAttribute{
																Required: true,
																Attributes: map[string]schema.Attribute{
																	"any": schema.StringAttribute{
																		Computed: true,
																		Optional: true,
																		Validators: []validator.String{
																			validators.IsValidJSON(),
																		},
																		Description: `Parsed as JSON.`,
																	},
																	"operation_object_node": schema.SingleNestedAttribute{
																		Computed: true,
																		Optional: true,
																		Attributes: map[string]schema.Attribute{
																			"append": schema.ListAttribute{
																				Computed:    true,
																				Optional:    true,
																				ElementType: types.StringType,
																				Validators: []validator.List{
																					listvalidator.ValueStringsAre(validators.IsValidJSON()),
																				},
																				Description: `Append to array`,
																			},
																			"copy": schema.StringAttribute{
																				Computed:    true,
																				Optional:    true,
																				Description: `Copy JSONPath value from source entity context`,
																			},
																			"set": schema.StringAttribute{
																				Computed: true,
																				Optional: true,
																				Validators: []validator.String{
																					validators.IsValidJSON(),
																				},
																				Description: `Parsed as JSON.`,
																			},
																			"uniq": schema.SingleNestedAttribute{
																				Computed: true,
																				Optional: true,
																				Attributes: map[string]schema.Attribute{
																					"boolean": schema.BoolAttribute{
																						Computed: true,
																						Optional: true,
																					},
																					"array_ofstr": schema.ListAttribute{
																						Optional:    true,
																						ElementType: types.StringType,
																					},
																				},
																				Validators: []validator.Object{
																					validators.ExactlyOneChild(),
																				},
																				Description: `Unique array`,
																			},
																			"additional_properties": schema.StringAttribute{
																				Optional: true,
																				Validators: []validator.String{
																					validators.IsValidJSON(),
																				},
																				Description: `Parsed as JSON.`,
																			},
																		},
																		Description: `Mapping operation nodes are either primitive values or operation node objects`,
																	},
																},
																Validators: []validator.Object{
																	validators.ExactlyOneChild(),
																},
																Description: `Mapping operation nodes are either primitive values or operation node objects`,
															},
															"target": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Target JSON path for the attribute to set`,
															},
														},
													},
												},
												Validators: []validator.Object{
													validators.ExactlyOneChild(),
												},
											},
											Description: `Attribute mappings`,
										},
										"mapping_config": schema.SingleNestedAttribute{
											Computed: true,
											Optional: true,
											Attributes: map[string]schema.Attribute{
												"config_id": schema.StringAttribute{
													Required:    true,
													Description: `Id of Entity Mapping Configuration to run for mapping.`,
												},
												"target_id": schema.StringAttribute{
													Required:    true,
													Description: `Id of TargetConfig to run for mapping.`,
												},
												"version": schema.NumberAttribute{
													Computed:    true,
													Optional:    true,
													Description: `Version of Entity Mapping Configuration to run for mapping.`,
												},
											},
										},
										"relation_attributes": schema.ListNestedAttribute{
											Computed: true,
											Optional: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"mode": schema.StringAttribute{
														Required: true,
														Validators: []validator.String{
															stringvalidator.OneOf(
																"append",
																"prepend",
																"set",
															),
														},
														Description: `must be one of ["append", "prepend", "set"]`,
													},
													"related_to": schema.MapAttribute{
														Computed:    true,
														Optional:    true,
														ElementType: types.StringType,
														Validators: []validator.Map{
															mapvalidator.ValueStringsAre(validators.IsValidJSON()),
														},
													},
													"source_filter": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"attribute": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by a specific relation attribute on the main entity`,
															},
															"limit": schema.Int64Attribute{
																Computed:    true,
																Optional:    true,
																Description: `Limit relations to maximum number (default, all matched relations)`,
															},
															"relation_tag": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by relation tag (label) on the main entity`,
															},
															"schema": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by specific schema`,
															},
															"self": schema.BoolAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Picks main entity as relation (overrides other filters)`,
															},
															"tag": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by a specific tag on the related entity`,
															},
														},
														Description: `A filter to identify which source entities to pick as relations from main entity`,
													},
													"target": schema.StringAttribute{
														Required:    true,
														Description: `Target attribute to store the relation in`,
													},
													"target_tags": schema.ListAttribute{
														Computed:    true,
														Optional:    true,
														ElementType: types.StringType,
														Description: `Relation tags (labels) to set for the stored relations`,
													},
													"target_tags_include_source": schema.BoolAttribute{
														Computed:    true,
														Optional:    true,
														Description: `Include all relation tags (labels) present on the main entity relation`,
													},
												},
											},
											Description: `Relation mappings`,
										},
										"target_schema": schema.StringAttribute{
											Required:    true,
											Description: `Schema of target entity`,
										},
										"target_unique": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
											Description: `Unique key for target entity (see upsertEntity of Entity API)`,
										},
									},
								},
								"created_automatically": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Flag indicating whether the action was created automatically or manually`,
								},
								"flow_action_id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"type": schema.StringAttribute{
									Computed: true,
									Optional: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"map-entity",
										),
									},
									Description: `must be one of ["map-entity"]`,
								},
							},
						},
						"send_email_action_config": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"allow_failure": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Whether to stop execution in a failed state if this action fails`,
								},
								"config": schema.SingleNestedAttribute{
									Computed: true,
									Optional: true,
									Attributes: map[string]schema.Attribute{
										"attachments": schema.ListNestedAttribute{
											Computed: true,
											Optional: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"source_filter": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"attribute": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by a specific relation attribute on the main entity`,
															},
															"document_type": schema.StringAttribute{
																Computed: true,
																Optional: true,
																Validators: []validator.String{
																	stringvalidator.OneOf(
																		"document",
																		"text",
																		"image",
																		"video",
																		"audio",
																		"spreadsheet",
																		"presentation",
																		"font",
																		"archive",
																		"application",
																		"unknown",
																	),
																},
																MarkdownDescription: `must be one of ["document", "text", "image", "video", "audio", "spreadsheet", "presentation", "font", "archive", "application", "unknown"]` + "\n" +
																	`Filter by a specific document type (e.g. document)`,
															},
															"filename_regex": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Match by filename. Regex syntax supported`,
															},
															"limit": schema.Int64Attribute{
																Computed:    true,
																Optional:    true,
																Description: `Limit files to maximum number (default, all matched file relations)`,
															},
															"relation_tag": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by relation tag (label) on the main entity`,
															},
															"self": schema.BoolAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Picks main entity as file (only works if source entity is a file)`,
															},
															"tag": schema.StringAttribute{
																Computed:    true,
																Optional:    true,
																Description: `Filter by a specific tag on the related file entity`,
															},
														},
														Description: `Specify filters to match file entities related to main entity`,
													},
												},
											},
											MarkdownDescription: `Include extra file attachments in sent email.` + "\n" +
												`` + "\n" +
												`Attachments in email template will be sent regardless of this configuration.` + "\n" +
												``,
										},
										"email_template_id": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
										"language_code": schema.StringAttribute{
											Computed: true,
											Optional: true,
											Validators: []validator.String{
												stringvalidator.OneOf(
													"de",
													"en",
												),
											},
											Description: `must be one of ["de", "en"]`,
										},
									},
								},
								"created_automatically": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Flag indicating whether the action was created automatically or manually`,
								},
								"flow_action_id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"type": schema.StringAttribute{
									Computed: true,
									Optional: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"send-email",
										),
									},
									Description: `must be one of ["send-email"]`,
								},
							},
						},
						"trigger_webhook_action_config": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"allow_failure": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Whether to stop execution in a failed state if this action fails`,
								},
								"config": schema.SingleNestedAttribute{
									Computed: true,
									Optional: true,
									Attributes: map[string]schema.Attribute{
										"entity_sources": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
										},
										"target_webhook_id": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
									},
								},
								"created_automatically": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Flag indicating whether the action was created automatically or manually`,
								},
								"flow_action_id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"type": schema.StringAttribute{
									Computed: true,
									Optional: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"trigger-webhook",
										),
									},
									Description: `must be one of ["trigger-webhook"]`,
								},
							},
						},
						"trigger_workflow_action_config": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"allow_failure": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Whether to stop execution in a failed state if this action fails`,
								},
								"config": schema.SingleNestedAttribute{
									Computed: true,
									Optional: true,
									Attributes: map[string]schema.Attribute{
										"assign_steps": schema.ListNestedAttribute{
											Computed: true,
											Optional: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"step_id": schema.StringAttribute{
														Computed: true,
														Optional: true,
													},
													"step_name": schema.StringAttribute{
														Computed: true,
														Optional: true,
													},
													"user_ids": schema.ListAttribute{
														Computed:    true,
														Optional:    true,
														ElementType: types.NumberType,
													},
												},
											},
										},
										"assignees": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
										},
										"conditions": schema.ListNestedAttribute{
											Computed: true,
											Optional: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"comparison": schema.StringAttribute{
														Required: true,
														Validators: []validator.String{
															stringvalidator.OneOf(
																"equals",
																"any_of",
																"not_empty",
																"is_empty",
															),
														},
														Description: `must be one of ["equals", "any_of", "not_empty", "is_empty"]`,
													},
													"schema": schema.StringAttribute{
														Required: true,
													},
													"source": schema.StringAttribute{
														Required: true,
													},
													"value": schema.SingleNestedAttribute{
														Computed: true,
														Optional: true,
														Attributes: map[string]schema.Attribute{
															"str": schema.StringAttribute{
																Computed: true,
																Optional: true,
															},
															"number": schema.NumberAttribute{
																Optional: true,
															},
															"array_ofstr": schema.ListAttribute{
																Optional:    true,
																ElementType: types.StringType,
															},
															"array_ofnumber": schema.ListAttribute{
																Optional:    true,
																ElementType: types.NumberType,
															},
														},
														Validators: []validator.Object{
															validators.ExactlyOneChild(),
														},
													},
												},
											},
										},
										"target_workflow": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
									},
								},
								"created_automatically": schema.BoolAttribute{
									Computed:    true,
									Optional:    true,
									Description: `Flag indicating whether the action was created automatically or manually`,
								},
								"flow_action_id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"type": schema.StringAttribute{
									Computed: true,
									Optional: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"trigger-workflow",
										),
									},
									Description: `must be one of ["trigger-workflow"]`,
								},
							},
						},
					},
					Validators: []validator.Object{
						validators.ExactlyOneChild(),
					},
				},
			},
			"created_at": schema.StringAttribute{
				Computed: true,
				Validators: []validator.String{
					validators.IsRFC3339(),
				},
			},
			"created_by": schema.StringAttribute{
				Computed:    true,
				Description: `User / service who created automation flow`,
			},
			"enabled": schema.BoolAttribute{
				Computed:    true,
				Optional:    true,
				Description: `Whether the automation is enabled or not`,
			},
			"entity_schema": schema.StringAttribute{
				Computed:    true,
				Optional:    true,
				Description: `The triggering entity schema`,
			},
			"flow_name": schema.StringAttribute{
				Required:    true,
				Description: `A descriptive name for the Automation`,
			},
			"id": schema.StringAttribute{
				Computed: true,
			},
			"last_updated_by": schema.StringAttribute{
				Computed:    true,
				Description: `User / service who last updated automation flow`,
			},
			"org_id": schema.StringAttribute{
				Computed:    true,
				Description: `Organization the automation flow belongs to`,
			},
			"runs": schema.NumberAttribute{
				Computed:    true,
				Optional:    true,
				Description: `Number of automation executions that ran`,
			},
			"trigger_conditions": schema.ListNestedAttribute{
				Computed: true,
				Optional: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"comparison": schema.StringAttribute{
							Required: true,
							Validators: []validator.String{
								stringvalidator.OneOf(
									"equals",
									"any_of",
									"not_empty",
									"is_empty",
								),
							},
							Description: `must be one of ["equals", "any_of", "not_empty", "is_empty"]`,
						},
						"source": schema.StringAttribute{
							Required: true,
						},
						"value": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"str": schema.StringAttribute{
									Computed: true,
									Optional: true,
								},
								"number": schema.NumberAttribute{
									Optional: true,
								},
								"array_ofstr": schema.ListAttribute{
									Optional:    true,
									ElementType: types.StringType,
								},
								"array_ofnumber": schema.ListAttribute{
									Optional:    true,
									ElementType: types.NumberType,
								},
							},
							Validators: []validator.Object{
								validators.ExactlyOneChild(),
							},
						},
					},
				},
			},
			"triggers": schema.ListNestedAttribute{
				Required: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"activity_trigger": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"configuration": schema.SingleNestedAttribute{
									Required: true,
									Attributes: map[string]schema.Attribute{
										"schema": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
										"types": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
										},
									},
								},
								"type": schema.StringAttribute{
									Required: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"activity",
										),
									},
									Description: `must be one of ["activity"]`,
								},
							},
						},
						"api_submission_trigger": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"configuration": schema.SingleNestedAttribute{
									Required: true,
									Attributes: map[string]schema.Attribute{
										"source_id": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
									},
								},
								"type": schema.StringAttribute{
									Required: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"api_submission",
										),
									},
									Description: `must be one of ["api_submission"]`,
								},
							},
						},
						"entity_manual_trigger": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"configuration": schema.SingleNestedAttribute{
									Required: true,
									Attributes: map[string]schema.Attribute{
										"schema": schema.StringAttribute{
											Computed:    true,
											Optional:    true,
											Description: `Which entity type can this automation be triggered from`,
										},
									},
								},
								"type": schema.StringAttribute{
									Required: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"entity_manual",
										),
									},
									Description: `must be one of ["entity_manual"]`,
								},
							},
						},
						"entity_operation_trigger": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"configuration": schema.SingleNestedAttribute{
									Required: true,
									Attributes: map[string]schema.Attribute{
										"exclude_activities": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
										},
										"include_activities": schema.ListAttribute{
											Computed:    true,
											Optional:    true,
											ElementType: types.StringType,
										},
										"operations": schema.ListAttribute{
											Required:    true,
											ElementType: types.StringType,
										},
										"schema": schema.StringAttribute{
											Required: true,
										},
									},
								},
								"type": schema.StringAttribute{
									Required: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"entity_operation",
										),
									},
									Description: `must be one of ["entity_operation"]`,
								},
							},
						},
						"frontend_submit_trigger": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"configuration": schema.SingleNestedAttribute{
									Required: true,
									Attributes: map[string]schema.Attribute{
										"source_id": schema.StringAttribute{
											Computed: true,
											Optional: true,
										},
									},
								},
								"type": schema.StringAttribute{
									Required: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"frontend_submission",
										),
									},
									Description: `must be one of ["frontend_submission"]`,
								},
							},
						},
						"journey_submit_trigger": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"configuration": schema.SingleNestedAttribute{
									Required: true,
									Attributes: map[string]schema.Attribute{
										"source_id": schema.StringAttribute{
											Required: true,
										},
									},
								},
								"type": schema.StringAttribute{
									Required: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"journey_submission",
										),
									},
									Description: `must be one of ["journey_submission"]`,
								},
							},
						},
						"received_email_trigger": schema.SingleNestedAttribute{
							Computed: true,
							Optional: true,
							Attributes: map[string]schema.Attribute{
								"configuration": schema.SingleNestedAttribute{
									Required: true,
									Attributes: map[string]schema.Attribute{
										"message_type": schema.StringAttribute{
											Computed: true,
											Optional: true,
											Validators: []validator.String{
												stringvalidator.OneOf(
													"RECEIVED",
												),
											},
											Description: `must be one of ["RECEIVED"]`,
										},
									},
								},
								"type": schema.StringAttribute{
									Required: true,
									Validators: []validator.String{
										stringvalidator.OneOf(
											"received_email",
										),
									},
									Description: `must be one of ["received_email"]`,
								},
							},
						},
					},
					Validators: []validator.Object{
						validators.ExactlyOneChild(),
					},
				},
			},
			"updated_at": schema.StringAttribute{
				Computed: true,
				Validators: []validator.String{
					validators.IsRFC3339(),
				},
			},
		},
	}
}

func (r *FlowResource) Configure(ctx context.Context, req resource.ConfigureRequest, resp *resource.ConfigureResponse) {
	// Prevent panic if the provider has not been configured.
	if req.ProviderData == nil {
		return
	}

	client, ok := req.ProviderData.(*sdk.SDK)

	if !ok {
		resp.Diagnostics.AddError(
			"Unexpected Resource Configure Type",
			fmt.Sprintf("Expected *sdk.SDK, got: %T. Please report this issue to the provider developers.", req.ProviderData),
		)

		return
	}

	r.client = client
}

func (r *FlowResource) Create(ctx context.Context, req resource.CreateRequest, resp *resource.CreateResponse) {
	var data *FlowResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.Plan.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	request := *data.ToCreateSDKType()
	res, err := r.client.Flows.CreateFlow(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 201 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if res.AutomationFlow == nil {
		resp.Diagnostics.AddError("unexpected response from API. No response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromCreateResponse(res.AutomationFlow)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *FlowResource) Read(ctx context.Context, req resource.ReadRequest, resp *resource.ReadResponse) {
	var data *FlowResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	flowID := data.ID.ValueString()
	request := operations.GetFlowRequest{
		FlowID: flowID,
	}
	res, err := r.client.Flows.GetFlow(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if res.AutomationFlow == nil {
		resp.Diagnostics.AddError("unexpected response from API. No response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromGetResponse(res.AutomationFlow)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *FlowResource) Update(ctx context.Context, req resource.UpdateRequest, resp *resource.UpdateResponse) {
	var data *FlowResourceModel
	merge(ctx, req, resp, &data)
	if resp.Diagnostics.HasError() {
		return
	}

	automationFlowInput := data.ToUpdateSDKType()
	flowID := data.ID.ValueString()
	request := operations.PutFlowRequest{
		AutomationFlowInput: automationFlowInput,
		FlowID:              flowID,
	}
	res, err := r.client.Flows.PutFlow(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if res.AutomationFlow == nil {
		resp.Diagnostics.AddError("unexpected response from API. No response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromUpdateResponse(res.AutomationFlow)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *FlowResource) Delete(ctx context.Context, req resource.DeleteRequest, resp *resource.DeleteResponse) {
	var data *FlowResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	flowID := data.ID.ValueString()
	request := operations.DeleteFlowRequest{
		FlowID: flowID,
	}
	res, err := r.client.Flows.DeleteFlow(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}

}

func (r *FlowResource) ImportState(ctx context.Context, req resource.ImportStateRequest, resp *resource.ImportStateResponse) {
	resource.ImportStatePassthroughID(ctx, path.Root("id"), req, resp)
}
