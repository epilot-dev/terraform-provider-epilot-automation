// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityOperation string

const (
	EntityOperationCreateEntity EntityOperation = "createEntity"
	EntityOperationUpdateEntity EntityOperation = "updateEntity"
	EntityOperationDeleteEntity EntityOperation = "deleteEntity"
)

func (e EntityOperation) ToPointer() *EntityOperation {
	return &e
}
func (e *EntityOperation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "createEntity":
		fallthrough
	case "updateEntity":
		fallthrough
	case "deleteEntity":
		*e = EntityOperation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityOperation: %v", v)
	}
}
