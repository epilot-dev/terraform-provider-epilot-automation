// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// AppendValueMapper
//
// Deprecated type: This will be removed in a future release, please migrate away from it as soon as possible.
type AppendValueMapper struct {
	// - copy_if_exists - it replaces the target attribute with the source value - append_if_exists - it currently replaces target attribute with array like values. Useful when you have multiple values to be added into one attribute. - set_value - it sets a value to a predefined value. Must be used together with value property.
	//
	Mode MappingAttributeMode `json:"mode"`
	// JSON source path for the value to be extracted from the main entity. Eg: steps[1].['Product Info'].price
	//
	Source *string `json:"source,omitempty"`
	// JSON like target path for the attribute. Eg. last_name
	Target string `json:"target"`
	// Array of keys which should be used when checking for uniqueness. Eg: [country, city, postal_code]
	//
	TargetUnique []string `json:"target_unique,omitempty"`
	// To be provided only when mapping json objects into a target attribute. Eg array of addresses.
	//
	ValueJSON string `json:"value_json"`
}

func (o *AppendValueMapper) GetMode() MappingAttributeMode {
	if o == nil {
		return MappingAttributeMode("")
	}
	return o.Mode
}

func (o *AppendValueMapper) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *AppendValueMapper) GetTarget() string {
	if o == nil {
		return ""
	}
	return o.Target
}

func (o *AppendValueMapper) GetTargetUnique() []string {
	if o == nil {
		return nil
	}
	return o.TargetUnique
}

func (o *AppendValueMapper) GetValueJSON() string {
	if o == nil {
		return ""
	}
	return o.ValueJSON
}
