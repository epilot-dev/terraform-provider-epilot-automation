// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-automation/internal/sdk/internal/utils"
)

type MappingAttributeType string

const (
	MappingAttributeTypeSetValueMapper    MappingAttributeType = "SetValueMapper"
	MappingAttributeTypeCopyValueMapper   MappingAttributeType = "CopyValueMapper"
	MappingAttributeTypeAppendValueMapper MappingAttributeType = "AppendValueMapper"
)

type MappingAttribute struct {
	SetValueMapper    *SetValueMapper
	CopyValueMapper   *CopyValueMapper
	AppendValueMapper *AppendValueMapper

	Type MappingAttributeType
}

func CreateMappingAttributeSetValueMapper(setValueMapper SetValueMapper) MappingAttribute {
	typ := MappingAttributeTypeSetValueMapper

	return MappingAttribute{
		SetValueMapper: &setValueMapper,
		Type:           typ,
	}
}

func CreateMappingAttributeCopyValueMapper(copyValueMapper CopyValueMapper) MappingAttribute {
	typ := MappingAttributeTypeCopyValueMapper

	return MappingAttribute{
		CopyValueMapper: &copyValueMapper,
		Type:            typ,
	}
}

func CreateMappingAttributeAppendValueMapper(appendValueMapper AppendValueMapper) MappingAttribute {
	typ := MappingAttributeTypeAppendValueMapper

	return MappingAttribute{
		AppendValueMapper: &appendValueMapper,
		Type:              typ,
	}
}

func (u *MappingAttribute) UnmarshalJSON(data []byte) error {

	var setValueMapper SetValueMapper = SetValueMapper{}
	if err := utils.UnmarshalJSON(data, &setValueMapper, "", true, true); err == nil {
		u.SetValueMapper = &setValueMapper
		u.Type = MappingAttributeTypeSetValueMapper
		return nil
	}

	var copyValueMapper CopyValueMapper = CopyValueMapper{}
	if err := utils.UnmarshalJSON(data, &copyValueMapper, "", true, true); err == nil {
		u.CopyValueMapper = &copyValueMapper
		u.Type = MappingAttributeTypeCopyValueMapper
		return nil
	}

	var appendValueMapper AppendValueMapper = AppendValueMapper{}
	if err := utils.UnmarshalJSON(data, &appendValueMapper, "", true, true); err == nil {
		u.AppendValueMapper = &appendValueMapper
		u.Type = MappingAttributeTypeAppendValueMapper
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for MappingAttribute", string(data))
}

func (u MappingAttribute) MarshalJSON() ([]byte, error) {
	if u.SetValueMapper != nil {
		return utils.MarshalJSON(u.SetValueMapper, "", true)
	}

	if u.CopyValueMapper != nil {
		return utils.MarshalJSON(u.CopyValueMapper, "", true)
	}

	if u.AppendValueMapper != nil {
		return utils.MarshalJSON(u.AppendValueMapper, "", true)
	}

	return nil, errors.New("could not marshal union type MappingAttribute: all fields are null")
}
