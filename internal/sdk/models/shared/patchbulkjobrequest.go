// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Action string

const (
	ActionApprove Action = "APPROVE"
	ActionCancel  Action = "CANCEL"
)

func (e Action) ToPointer() *Action {
	return &e
}
func (e *Action) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APPROVE":
		fallthrough
	case "CANCEL":
		*e = Action(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Action: %v", v)
	}
}

type PatchBulkJobRequest struct {
	Action    Action `json:"action"`
	TaskToken string `json:"task_token"`
}

func (o *PatchBulkJobRequest) GetAction() Action {
	if o == nil {
		return Action("")
	}
	return o.Action
}

func (o *PatchBulkJobRequest) GetTaskToken() string {
	if o == nil {
		return ""
	}
	return o.TaskToken
}
