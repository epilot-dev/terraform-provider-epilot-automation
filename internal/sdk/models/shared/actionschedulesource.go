// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Origin string

const (
	OriginTrigger    Origin = "trigger"
	OriginAction     Origin = "action"
	OriginActionTask Origin = "action_task"
	OriginAutomation Origin = "automation"
)

func (e Origin) ToPointer() *Origin {
	return &e
}
func (e *Origin) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "trigger":
		fallthrough
	case "action":
		fallthrough
	case "action_task":
		fallthrough
	case "automation":
		*e = Origin(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Origin: %v", v)
	}
}

// ActionScheduleSource - The source of the schedule_at timestamp that will be used to schedule the action
type ActionScheduleSource struct {
	Attribute string `json:"attribute"`
	// The id of the action or trigger
	ID     string `json:"id"`
	Origin Origin `json:"origin"`
	Schema string `json:"schema"`
}

func (o *ActionScheduleSource) GetAttribute() string {
	if o == nil {
		return ""
	}
	return o.Attribute
}

func (o *ActionScheduleSource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ActionScheduleSource) GetOrigin() Origin {
	if o == nil {
		return Origin("")
	}
	return o.Origin
}

func (o *ActionScheduleSource) GetSchema() string {
	if o == nil {
		return ""
	}
	return o.Schema
}
