// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AutomationActionExecutionStateType1 string

const (
	AutomationActionExecutionStateType1TriggerWorkflow AutomationActionExecutionStateType1 = "trigger-workflow"
)

func (e AutomationActionExecutionStateType1) ToPointer() *AutomationActionExecutionStateType1 {
	return &e
}

func (e *AutomationActionExecutionStateType1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "trigger-workflow":
		*e = AutomationActionExecutionStateType1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AutomationActionExecutionStateType1: %v", v)
	}
}

type AutomationActionExecutionState1 struct {
	Config          *TriggerWorkflowConfig `json:"config,omitempty"`
	ErrorOutput     *ErrorOutput           `json:"error_output,omitempty"`
	ExecutionStatus *ExecutionStatus       `json:"execution_status,omitempty"`
	Outputs         map[string]interface{} `json:"outputs,omitempty"`
	// different behaviors for retrying failed execution actions.
	RetryStrategy *RetryStrategy                       `json:"retry_strategy,omitempty"`
	StartedAt     *string                              `json:"started_at,omitempty"`
	Type          *AutomationActionExecutionStateType1 `json:"type,omitempty"`
	UpdatedAt     *string                              `json:"updated_at,omitempty"`
}
