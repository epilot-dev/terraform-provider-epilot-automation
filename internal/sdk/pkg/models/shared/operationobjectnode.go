// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"errors"
	"github.com/epilot-dev/terraform-provider-epilot-automation/internal/sdk/pkg/utils"
)

type UniqType string

const (
	UniqTypeBoolean    UniqType = "boolean"
	UniqTypeArrayOfstr UniqType = "arrayOfstr"
)

// Uniq - Unique array
type Uniq struct {
	Boolean    *bool
	ArrayOfstr []string

	Type UniqType
}

func CreateUniqBoolean(boolean bool) Uniq {
	typ := UniqTypeBoolean

	return Uniq{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateUniqArrayOfstr(arrayOfstr []string) Uniq {
	typ := UniqTypeArrayOfstr

	return Uniq{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *Uniq) UnmarshalJSON(data []byte) error {

	boolean := new(bool)
	if err := utils.UnmarshalJSON(data, &boolean, "", true, true); err == nil {
		u.Boolean = boolean
		u.Type = UniqTypeBoolean
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = UniqTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u Uniq) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type OperationObjectNode struct {
	AdditionalProperties interface{} `additionalProperties:"true" json:"-"`
	// Append to array
	Append []interface{} `json:"_append,omitempty"`
	// Copy JSONPath value from source entity context
	Copy *string     `json:"_copy,omitempty"`
	Set  interface{} `json:"_set,omitempty"`
	// Unique array
	Uniq *Uniq `json:"_uniq,omitempty"`
}

func (o OperationObjectNode) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OperationObjectNode) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *OperationObjectNode) GetAdditionalProperties() interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *OperationObjectNode) GetAppend() []interface{} {
	if o == nil {
		return nil
	}
	return o.Append
}

func (o *OperationObjectNode) GetCopy() *string {
	if o == nil {
		return nil
	}
	return o.Copy
}

func (o *OperationObjectNode) GetSet() interface{} {
	if o == nil {
		return nil
	}
	return o.Set
}

func (o *OperationObjectNode) GetUniq() *Uniq {
	if o == nil {
		return nil
	}
	return o.Uniq
}
