// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type AutomationActionType string

const (
	AutomationActionTypeAutomationActionConfig          AutomationActionType = "AutomationActionConfig"
	AutomationActionTypeAutomationActionExecutionState6 AutomationActionType = "AutomationActionExecutionState6"
)

type AutomationAction struct {
	AutomationActionConfig          *AutomationActionConfig
	AutomationActionExecutionState6 *AutomationActionExecutionState6

	Type AutomationActionType
}

func CreateAutomationActionAutomationActionConfig(automationActionConfig AutomationActionConfig) AutomationAction {
	typ := AutomationActionTypeAutomationActionConfig

	return AutomationAction{
		AutomationActionConfig: &automationActionConfig,
		Type:                   typ,
	}
}

func CreateAutomationActionAutomationActionExecutionState6(automationActionExecutionState6 AutomationActionExecutionState6) AutomationAction {
	typ := AutomationActionTypeAutomationActionExecutionState6

	return AutomationAction{
		AutomationActionExecutionState6: &automationActionExecutionState6,
		Type:                            typ,
	}
}

func (u *AutomationAction) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	automationActionConfig := new(AutomationActionConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionConfig); err == nil {
		u.AutomationActionConfig = automationActionConfig
		u.Type = AutomationActionTypeAutomationActionConfig
		return nil
	}

	automationActionExecutionState6 := new(AutomationActionExecutionState6)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionExecutionState6); err == nil {
		u.AutomationActionExecutionState6 = automationActionExecutionState6
		u.Type = AutomationActionTypeAutomationActionExecutionState6
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u AutomationAction) MarshalJSON() ([]byte, error) {
	if u.AutomationActionConfig != nil {
		return json.Marshal(u.AutomationActionConfig)
	}

	if u.AutomationActionExecutionState6 != nil {
		return json.Marshal(u.AutomationActionExecutionState6)
	}

	return nil, nil
}
