// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type MapEntityActionType string

const (
	MapEntityActionTypeAutomationActionConfig         MapEntityActionType = "AutomationActionConfig"
	MapEntityActionTypeAutomationActionExecutionState MapEntityActionType = "AutomationActionExecutionState"
)

type MapEntityAction struct {
	AutomationActionConfig         *AutomationActionConfig
	AutomationActionExecutionState *AutomationActionExecutionState

	Type MapEntityActionType
}

func CreateMapEntityActionAutomationActionConfig(automationActionConfig AutomationActionConfig) MapEntityAction {
	typ := MapEntityActionTypeAutomationActionConfig

	return MapEntityAction{
		AutomationActionConfig: &automationActionConfig,
		Type:                   typ,
	}
}

func CreateMapEntityActionAutomationActionExecutionState(automationActionExecutionState AutomationActionExecutionState) MapEntityAction {
	typ := MapEntityActionTypeAutomationActionExecutionState

	return MapEntityAction{
		AutomationActionExecutionState: &automationActionExecutionState,
		Type:                           typ,
	}
}

func (u *MapEntityAction) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	automationActionConfig := new(AutomationActionConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionConfig); err == nil {
		u.AutomationActionConfig = automationActionConfig
		u.Type = MapEntityActionTypeAutomationActionConfig
		return nil
	}

	automationActionExecutionState := new(AutomationActionExecutionState)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionExecutionState); err == nil {
		u.AutomationActionExecutionState = automationActionExecutionState
		u.Type = MapEntityActionTypeAutomationActionExecutionState
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u MapEntityAction) MarshalJSON() ([]byte, error) {
	if u.AutomationActionConfig != nil {
		return json.Marshal(u.AutomationActionConfig)
	}

	if u.AutomationActionExecutionState != nil {
		return json.Marshal(u.AutomationActionExecutionState)
	}

	return nil, nil
}
