// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorCode string

const (
	ErrorCodeMappingError          ErrorCode = "MAPPING_ERROR"
	ErrorCodeRefreshRelationsError ErrorCode = "REFRESH_RELATIONS_ERROR"
	ErrorCodeDuplicateEntityError  ErrorCode = "DUPLICATE_ENTITY_ERROR"
	ErrorCodeTriggerWorkflowError  ErrorCode = "TRIGGER_WORKFLOW_ERROR"
	ErrorCodeTimeoutError          ErrorCode = "TIMEOUT_ERROR"
	ErrorCodeBadConfig             ErrorCode = "BAD_CONFIG"
	ErrorCodeInternalError         ErrorCode = "INTERNAL_ERROR"
)

func (e ErrorCode) ToPointer() *ErrorCode {
	return &e
}

func (e *ErrorCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MAPPING_ERROR":
		fallthrough
	case "REFRESH_RELATIONS_ERROR":
		fallthrough
	case "DUPLICATE_ENTITY_ERROR":
		fallthrough
	case "TRIGGER_WORKFLOW_ERROR":
		fallthrough
	case "TIMEOUT_ERROR":
		fallthrough
	case "BAD_CONFIG":
		fallthrough
	case "INTERNAL_ERROR":
		*e = ErrorCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCode: %v", v)
	}
}
