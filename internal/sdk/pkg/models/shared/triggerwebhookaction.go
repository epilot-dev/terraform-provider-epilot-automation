// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type TriggerWebhookActionType string

const (
	TriggerWebhookActionTypeAutomationActionConfig          TriggerWebhookActionType = "AutomationActionConfig"
	TriggerWebhookActionTypeAutomationActionExecutionState2 TriggerWebhookActionType = "AutomationActionExecutionState2"
)

type TriggerWebhookAction struct {
	AutomationActionConfig          *AutomationActionConfig
	AutomationActionExecutionState2 *AutomationActionExecutionState2

	Type TriggerWebhookActionType
}

func CreateTriggerWebhookActionAutomationActionConfig(automationActionConfig AutomationActionConfig) TriggerWebhookAction {
	typ := TriggerWebhookActionTypeAutomationActionConfig

	return TriggerWebhookAction{
		AutomationActionConfig: &automationActionConfig,
		Type:                   typ,
	}
}

func CreateTriggerWebhookActionAutomationActionExecutionState2(automationActionExecutionState2 AutomationActionExecutionState2) TriggerWebhookAction {
	typ := TriggerWebhookActionTypeAutomationActionExecutionState2

	return TriggerWebhookAction{
		AutomationActionExecutionState2: &automationActionExecutionState2,
		Type:                            typ,
	}
}

func (u *TriggerWebhookAction) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	automationActionConfig := new(AutomationActionConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionConfig); err == nil {
		u.AutomationActionConfig = automationActionConfig
		u.Type = TriggerWebhookActionTypeAutomationActionConfig
		return nil
	}

	automationActionExecutionState2 := new(AutomationActionExecutionState2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionExecutionState2); err == nil {
		u.AutomationActionExecutionState2 = automationActionExecutionState2
		u.Type = TriggerWebhookActionTypeAutomationActionExecutionState2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u TriggerWebhookAction) MarshalJSON() ([]byte, error) {
	if u.AutomationActionConfig != nil {
		return json.Marshal(u.AutomationActionConfig)
	}

	if u.AutomationActionExecutionState2 != nil {
		return json.Marshal(u.AutomationActionExecutionState2)
	}

	return nil, nil
}
