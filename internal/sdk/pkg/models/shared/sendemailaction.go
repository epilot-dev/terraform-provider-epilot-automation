// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type SendEmailActionType string

const (
	SendEmailActionTypeAutomationActionConfig          SendEmailActionType = "AutomationActionConfig"
	SendEmailActionTypeAutomationActionExecutionState4 SendEmailActionType = "AutomationActionExecutionState4"
)

type SendEmailAction struct {
	AutomationActionConfig          *AutomationActionConfig
	AutomationActionExecutionState4 *AutomationActionExecutionState4

	Type SendEmailActionType
}

func CreateSendEmailActionAutomationActionConfig(automationActionConfig AutomationActionConfig) SendEmailAction {
	typ := SendEmailActionTypeAutomationActionConfig

	return SendEmailAction{
		AutomationActionConfig: &automationActionConfig,
		Type:                   typ,
	}
}

func CreateSendEmailActionAutomationActionExecutionState4(automationActionExecutionState4 AutomationActionExecutionState4) SendEmailAction {
	typ := SendEmailActionTypeAutomationActionExecutionState4

	return SendEmailAction{
		AutomationActionExecutionState4: &automationActionExecutionState4,
		Type:                            typ,
	}
}

func (u *SendEmailAction) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	automationActionConfig := new(AutomationActionConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionConfig); err == nil {
		u.AutomationActionConfig = automationActionConfig
		u.Type = SendEmailActionTypeAutomationActionConfig
		return nil
	}

	automationActionExecutionState4 := new(AutomationActionExecutionState4)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionExecutionState4); err == nil {
		u.AutomationActionExecutionState4 = automationActionExecutionState4
		u.Type = SendEmailActionTypeAutomationActionExecutionState4
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SendEmailAction) MarshalJSON() ([]byte, error) {
	if u.AutomationActionConfig != nil {
		return json.Marshal(u.AutomationActionConfig)
	}

	if u.AutomationActionExecutionState4 != nil {
		return json.Marshal(u.AutomationActionExecutionState4)
	}

	return nil, nil
}
