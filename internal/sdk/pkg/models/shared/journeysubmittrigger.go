// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JourneySubmitTriggerConfiguration struct {
	SourceID string `json:"source_id"`
}

type JourneySubmitTriggerTypeEnum string

const (
	JourneySubmitTriggerTypeEnumJourneySubmission JourneySubmitTriggerTypeEnum = "journey_submission"
)

func (e *JourneySubmitTriggerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "journey_submission":
		*e = JourneySubmitTriggerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JourneySubmitTriggerTypeEnum: %s", s)
	}
}

type JourneySubmitTrigger struct {
	Configuration JourneySubmitTriggerConfiguration `json:"configuration"`
	Type          JourneySubmitTriggerTypeEnum      `json:"type"`
}
