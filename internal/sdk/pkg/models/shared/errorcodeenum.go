// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorCodeEnum string

const (
	ErrorCodeEnumMappingError          ErrorCodeEnum = "MAPPING_ERROR"
	ErrorCodeEnumRefreshRelationsError ErrorCodeEnum = "REFRESH_RELATIONS_ERROR"
	ErrorCodeEnumDuplicateEntityError  ErrorCodeEnum = "DUPLICATE_ENTITY_ERROR"
	ErrorCodeEnumTriggerWorkflowError  ErrorCodeEnum = "TRIGGER_WORKFLOW_ERROR"
	ErrorCodeEnumTimeoutError          ErrorCodeEnum = "TIMEOUT_ERROR"
	ErrorCodeEnumBadConfig             ErrorCodeEnum = "BAD_CONFIG"
	ErrorCodeEnumInternalError         ErrorCodeEnum = "INTERNAL_ERROR"
)

func (e *ErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MAPPING_ERROR":
		fallthrough
	case "REFRESH_RELATIONS_ERROR":
		fallthrough
	case "DUPLICATE_ENTITY_ERROR":
		fallthrough
	case "TRIGGER_WORKFLOW_ERROR":
		fallthrough
	case "TIMEOUT_ERROR":
		fallthrough
	case "BAD_CONFIG":
		fallthrough
	case "INTERNAL_ERROR":
		*e = ErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCodeEnum: %s", s)
	}
}
