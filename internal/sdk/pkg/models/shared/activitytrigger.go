// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActivityTriggerConfigurationTypesEnum string

const (
	ActivityTriggerConfigurationTypesEnumCreateMeterReading ActivityTriggerConfigurationTypesEnum = "CreateMeterReading"
	ActivityTriggerConfigurationTypesEnumUpdateMeterReading ActivityTriggerConfigurationTypesEnum = "UpdateMeterReading"
	ActivityTriggerConfigurationTypesEnumMessageActivity    ActivityTriggerConfigurationTypesEnum = "MessageActivity"
	ActivityTriggerConfigurationTypesEnumSyncActivity       ActivityTriggerConfigurationTypesEnum = "SyncActivity"
)

func (e *ActivityTriggerConfigurationTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateMeterReading":
		fallthrough
	case "UpdateMeterReading":
		fallthrough
	case "MessageActivity":
		fallthrough
	case "SyncActivity":
		*e = ActivityTriggerConfigurationTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivityTriggerConfigurationTypesEnum: %s", s)
	}
}

type ActivityTriggerConfiguration struct {
	Schema *string                                 `json:"schema,omitempty"`
	Types  []ActivityTriggerConfigurationTypesEnum `json:"types,omitempty"`
}

type ActivityTriggerTypeEnum string

const (
	ActivityTriggerTypeEnumActivity ActivityTriggerTypeEnum = "activity"
)

func (e *ActivityTriggerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "activity":
		*e = ActivityTriggerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivityTriggerTypeEnum: %s", s)
	}
}

type ActivityTrigger struct {
	Configuration ActivityTriggerConfiguration `json:"configuration"`
	Type          ActivityTriggerTypeEnum      `json:"type"`
}
