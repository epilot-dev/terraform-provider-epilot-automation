// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type CartCheckoutActionType string

const (
	CartCheckoutActionTypeAutomationActionConfig          CartCheckoutActionType = "AutomationActionConfig"
	CartCheckoutActionTypeAutomationActionExecutionState5 CartCheckoutActionType = "AutomationActionExecutionState5"
)

type CartCheckoutAction struct {
	AutomationActionConfig          *AutomationActionConfig
	AutomationActionExecutionState5 *AutomationActionExecutionState5

	Type CartCheckoutActionType
}

func CreateCartCheckoutActionAutomationActionConfig(automationActionConfig AutomationActionConfig) CartCheckoutAction {
	typ := CartCheckoutActionTypeAutomationActionConfig

	return CartCheckoutAction{
		AutomationActionConfig: &automationActionConfig,
		Type:                   typ,
	}
}

func CreateCartCheckoutActionAutomationActionExecutionState5(automationActionExecutionState5 AutomationActionExecutionState5) CartCheckoutAction {
	typ := CartCheckoutActionTypeAutomationActionExecutionState5

	return CartCheckoutAction{
		AutomationActionExecutionState5: &automationActionExecutionState5,
		Type:                            typ,
	}
}

func (u *CartCheckoutAction) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	automationActionConfig := new(AutomationActionConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionConfig); err == nil {
		u.AutomationActionConfig = automationActionConfig
		u.Type = CartCheckoutActionTypeAutomationActionConfig
		return nil
	}

	automationActionExecutionState5 := new(AutomationActionExecutionState5)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&automationActionExecutionState5); err == nil {
		u.AutomationActionExecutionState5 = automationActionExecutionState5
		u.Type = CartCheckoutActionTypeAutomationActionExecutionState5
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CartCheckoutAction) MarshalJSON() ([]byte, error) {
	if u.AutomationActionConfig != nil {
		return json.Marshal(u.AutomationActionConfig)
	}

	if u.AutomationActionExecutionState5 != nil {
		return json.Marshal(u.AutomationActionExecutionState5)
	}

	return nil, nil
}
