// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CartCheckoutActionConfigTypeEnum string

const (
	CartCheckoutActionConfigTypeEnumCartCheckout CartCheckoutActionConfigTypeEnum = "cart-checkout"
)

func (e *CartCheckoutActionConfigTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cart-checkout":
		*e = CartCheckoutActionConfigTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CartCheckoutActionConfigTypeEnum: %s", s)
	}
}

// CartCheckoutActionConfig - Creates an order entity with prices from journey
type CartCheckoutActionConfig struct {
	// Whether to stop execution in a failed state if this action fails
	AllowFailure *bool               `json:"allow_failure,omitempty"`
	Config       *CartCheckoutConfig `json:"config,omitempty"`
	// Flag indicating whether the action was created automatically or manually
	CreatedAutomatically *bool                             `json:"created_automatically,omitempty"`
	FlowActionID         *string                           `json:"flow_action_id,omitempty"`
	ID                   *string                           `json:"id,omitempty"`
	Name                 *string                           `json:"name,omitempty"`
	Type                 *CartCheckoutActionConfigTypeEnum `json:"type,omitempty"`
}
