// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CartCheckoutActionConfigType string

const (
	CartCheckoutActionConfigTypeCartCheckout CartCheckoutActionConfigType = "cart-checkout"
)

func (e CartCheckoutActionConfigType) ToPointer() *CartCheckoutActionConfigType {
	return &e
}

func (e *CartCheckoutActionConfigType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cart-checkout":
		*e = CartCheckoutActionConfigType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CartCheckoutActionConfigType: %v", v)
	}
}

// CartCheckoutActionConfig - Creates an order entity with prices from journey
type CartCheckoutActionConfig struct {
	// Whether to stop execution in a failed state if this action fails
	AllowFailure *bool               `json:"allow_failure,omitempty"`
	Config       *CartCheckoutConfig `json:"config,omitempty"`
	// Flag indicating whether the action was created automatically or manually
	CreatedAutomatically *bool                         `json:"created_automatically,omitempty"`
	FlowActionID         *string                       `json:"flow_action_id,omitempty"`
	ID                   *string                       `json:"id,omitempty"`
	Name                 *string                       `json:"name,omitempty"`
	Type                 *CartCheckoutActionConfigType `json:"type,omitempty"`
}
