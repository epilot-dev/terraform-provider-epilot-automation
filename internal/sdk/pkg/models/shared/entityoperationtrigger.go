// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityOperationTriggerConfigurationOperations string

const (
	EntityOperationTriggerConfigurationOperationsCreateEntity EntityOperationTriggerConfigurationOperations = "createEntity"
	EntityOperationTriggerConfigurationOperationsUpdateEntity EntityOperationTriggerConfigurationOperations = "updateEntity"
	EntityOperationTriggerConfigurationOperationsDeleteEntity EntityOperationTriggerConfigurationOperations = "deleteEntity"
)

func (e EntityOperationTriggerConfigurationOperations) ToPointer() *EntityOperationTriggerConfigurationOperations {
	return &e
}

func (e *EntityOperationTriggerConfigurationOperations) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "createEntity":
		fallthrough
	case "updateEntity":
		fallthrough
	case "deleteEntity":
		*e = EntityOperationTriggerConfigurationOperations(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityOperationTriggerConfigurationOperations: %v", v)
	}
}

type EntityOperationTriggerConfiguration struct {
	ExcludeActivities []string                                        `json:"exclude_activities,omitempty"`
	IncludeActivities []string                                        `json:"include_activities,omitempty"`
	Operations        []EntityOperationTriggerConfigurationOperations `json:"operations"`
	Schema            string                                          `json:"schema"`
}

type EntityOperationTriggerType string

const (
	EntityOperationTriggerTypeEntityOperation EntityOperationTriggerType = "entity_operation"
)

func (e EntityOperationTriggerType) ToPointer() *EntityOperationTriggerType {
	return &e
}

func (e *EntityOperationTriggerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "entity_operation":
		*e = EntityOperationTriggerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityOperationTriggerType: %v", v)
	}
}

type EntityOperationTrigger struct {
	Configuration EntityOperationTriggerConfiguration `json:"configuration"`
	Type          EntityOperationTriggerType          `json:"type"`
}
