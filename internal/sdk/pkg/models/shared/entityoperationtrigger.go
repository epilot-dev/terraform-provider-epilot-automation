// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityOperationTriggerConfigurationOperationsEnum string

const (
	EntityOperationTriggerConfigurationOperationsEnumCreateEntity EntityOperationTriggerConfigurationOperationsEnum = "createEntity"
	EntityOperationTriggerConfigurationOperationsEnumUpdateEntity EntityOperationTriggerConfigurationOperationsEnum = "updateEntity"
	EntityOperationTriggerConfigurationOperationsEnumDeleteEntity EntityOperationTriggerConfigurationOperationsEnum = "deleteEntity"
)

func (e *EntityOperationTriggerConfigurationOperationsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "createEntity":
		fallthrough
	case "updateEntity":
		fallthrough
	case "deleteEntity":
		*e = EntityOperationTriggerConfigurationOperationsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityOperationTriggerConfigurationOperationsEnum: %s", s)
	}
}

type EntityOperationTriggerConfiguration struct {
	ExcludeActivities []string                                            `json:"exclude_activities,omitempty"`
	IncludeActivities []string                                            `json:"include_activities,omitempty"`
	Operations        []EntityOperationTriggerConfigurationOperationsEnum `json:"operations"`
	Schema            string                                              `json:"schema"`
}

type EntityOperationTriggerTypeEnum string

const (
	EntityOperationTriggerTypeEnumEntityOperation EntityOperationTriggerTypeEnum = "entity_operation"
)

func (e *EntityOperationTriggerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "entity_operation":
		*e = EntityOperationTriggerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityOperationTriggerTypeEnum: %s", s)
	}
}

type EntityOperationTrigger struct {
	Configuration EntityOperationTriggerConfiguration `json:"configuration"`
	Type          EntityOperationTriggerTypeEnum      `json:"type"`
}
