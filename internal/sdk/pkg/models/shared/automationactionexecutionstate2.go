// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AutomationActionExecutionStateTypeEnum2 string

const (
	AutomationActionExecutionStateTypeEnum2TriggerWebhook AutomationActionExecutionStateTypeEnum2 = "trigger-webhook"
)

func (e *AutomationActionExecutionStateTypeEnum2) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "trigger-webhook":
		*e = AutomationActionExecutionStateTypeEnum2(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AutomationActionExecutionStateTypeEnum2: %s", s)
	}
}

type AutomationActionExecutionState2 struct {
	Config          *TriggerWebhookConfig  `json:"config,omitempty"`
	ErrorOutput     *ErrorOutput           `json:"error_output,omitempty"`
	ExecutionStatus *ExecutionStatusEnum   `json:"execution_status,omitempty"`
	Outputs         map[string]interface{} `json:"outputs,omitempty"`
	// different behaviors for retrying failed execution actions.
	RetryStrategy *RetryStrategyEnum                       `json:"retry_strategy,omitempty"`
	StartedAt     *string                                  `json:"started_at,omitempty"`
	Type          *AutomationActionExecutionStateTypeEnum2 `json:"type,omitempty"`
	UpdatedAt     *string                                  `json:"updated_at,omitempty"`
}
