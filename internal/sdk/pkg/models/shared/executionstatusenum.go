// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExecutionStatusEnum string

const (
	ExecutionStatusEnumPending    ExecutionStatusEnum = "pending"
	ExecutionStatusEnumInProgress ExecutionStatusEnum = "in_progress"
	ExecutionStatusEnumSuccess    ExecutionStatusEnum = "success"
	ExecutionStatusEnumFailed     ExecutionStatusEnum = "failed"
	ExecutionStatusEnumCancelled  ExecutionStatusEnum = "cancelled"
)

func (e *ExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "in_progress":
		fallthrough
	case "success":
		fallthrough
	case "failed":
		fallthrough
	case "cancelled":
		*e = ExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionStatusEnum: %s", s)
	}
}
